%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 
    function SP2_LCM_FitDetailsMain
%%
%%  Create window for selection of LCM analysis details.
%%
%%  10-2015, Christoph Juchem
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

global fm pars lcm flag 

FCTNAME = 'SP2_LCM_FitDetailsMain';


%--- check existence of basis set ---
% note that lcm.basis.data = 0 by default and before the data of a basis
% set is assigned (as cell)
if isnumeric(lcm.basis.data)
    fprintf('No basis set found. Load/create first.\n');
    return
end

%--- kill existing figure ---
if isfield(fm.lcm,'fit')
    if ishandle(fm.lcm.fit.fig)
        delete(fm.lcm.fit.fig)
    end
end

%--- create figure ---
fm.lcm.fit.fig = figure('IntegerHandle','off');        
set(fm.lcm.fit.fig,'CloseRequestFcn',@SP2_LCM_FitExitMain);
set(fm.lcm.fit.fig,'NumberTitle','off','Position',[1 30 1000 900],'Color',pars.bgColor,...
                   'MenuBar','none','Resize','off','Name',' Analysis Details');
axes('Visible','off');


%--------------------------------
%---   T O P    L A B E L S   ---
%--------------------------------
if flag.OS==1               % Linux
    fm.lcm.fit.lbLab       = text('Position',[0.380 1.04],'String',sprintf('Lorentzian'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
    fm.lcm.fit.lb          = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.31 0.969 .02 .02], ...
                                       'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaLb,'Callback','SP2_LCM_FitAnaLbFlagUpdate',...
                                       'TooltipString',sprintf('Include Lorentzian line broadening in set of optimization parameters'));
    fm.lcm.fit.lbMinLab    = text('Position',[0.350 0.98],'String',sprintf('Min.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.lbAnaLab    = text('Position',[0.450 0.98],'String',sprintf('Curr.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.lbMaxLab    = text('Position',[0.550 0.98],'String',sprintf('Max.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.gbLab       = text('Position',[0.760 1.04],'String',sprintf('Gaussian'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
    fm.lcm.fit.gb          = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.47 0.969 .02 .02], ...
                                       'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaGb,'Callback','SP2_LCM_FitAnaGbFlagUpdate',...
                                       'TooltipString',sprintf('Include Gaussian line broadening in set of optimization parameters'));
    fm.lcm.fit.gbMinLab    = text('Position',[0.720 0.98],'String',sprintf('Min.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.gbAnaLab    = text('Position',[0.820 0.98],'String',sprintf('Curr.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.gbMaxLab    = text('Position',[0.920 0.98],'String',sprintf('Max.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.shiftLab    = text('Position',[1.120 1.04],'String',sprintf('Frequency'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
    fm.lcm.fit.shift       = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.63 0.969 .02 .02], ...
                                       'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaShift,'Callback','SP2_LCM_FitAnaShiftFlagUpdate',...
                                       'TooltipString',sprintf('Include frequency shifs in set of optimization parameters'));
    fm.lcm.fit.shiftMinLab = text('Position',[1.090 0.98],'String',sprintf('Min.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.shiftAnaLab = text('Position',[1.190 0.98],'String',sprintf('Curr.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.shiftMaxLab = text('Position',[1.290 0.98],'String',sprintf('Max.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.scaleLab    = text('Position',[1.440 1.04],'String',sprintf('Scaling'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
elseif flag.OS==2           % Mac
    fm.lcm.fit.lbLab       = text('Position',[0.157 1.07],'String',sprintf('Lorentzian'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
    fm.lcm.fit.lb          = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.31 0.969 .02 .02],'FontSize',pars.fontSize, ...
                                       'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaLb,'Callback','SP2_LCM_FitAnaLbFlagUpdate',...
                                       'TooltipString',sprintf('Include Lorentzian line broadening in set of optimization parameters'));
    fm.lcm.fit.lbMinLab    = text('Position',[0.125 1.04],'String',sprintf('Min.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.lbAnaLab    = text('Position',[0.180 1.04],'String',sprintf('Curr.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.lbMaxLab    = text('Position',[0.235 1.04],'String',sprintf('Max.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.gbLab       = text('Position',[0.370 1.07],'String',sprintf('Gaussian'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
    fm.lcm.fit.gb          = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.47 0.969 .02 .02],'FontSize',pars.fontSize, ...
                                       'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaGb,'Callback','SP2_LCM_FitAnaGbFlagUpdate',...
                                       'TooltipString',sprintf('Include Gaussian line broadening in set of optimization parameters'));
    fm.lcm.fit.gbMinLab    = text('Position',[0.330 1.04],'String',sprintf('Min.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.gbAnaLab    = text('Position',[0.385 1.04],'String',sprintf('Curr.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.gbMaxLab    = text('Position',[0.440 1.04],'String',sprintf('Max.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.shiftLab    = text('Position',[0.570 1.07],'String',sprintf('Frequency'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
    fm.lcm.fit.shift       = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.63 0.969 .02 .02], ...
                                       'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaShift,'Callback','SP2_LCM_FitAnaShiftFlagUpdate',...
                                       'TooltipString',sprintf('Include frequency shifs in set of optimization parameters'));
    fm.lcm.fit.shiftMinLab = text('Position',[0.535 1.04],'String',sprintf('Min.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.shiftAnaLab = text('Position',[0.590 1.04],'String',sprintf('Curr.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.shiftMaxLab = text('Position',[0.645 1.04],'String',sprintf('Max.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.scaleLab    = text('Position',[0.740 1.07],'String',sprintf('Scaling'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
else                        % PC
    fm.lcm.fit.lbLab       = text('Position',[0.380 1.04],'String',sprintf('Lorentzian'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
    fm.lcm.fit.lb          = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.31 0.969 .02 .02], ...
                                       'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaLb,'Callback','SP2_LCM_FitAnaLbFlagUpdate',...
                                       'TooltipString',sprintf('Include Lorentzian line broadening in set of optimization parameters'));
    fm.lcm.fit.lbMinLab    = text('Position',[0.350 0.98],'String',sprintf('Min.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.lbAnaLab    = text('Position',[0.450 0.98],'String',sprintf('Curr.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.lbMaxLab    = text('Position',[0.550 0.98],'String',sprintf('Max.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.gbLab       = text('Position',[0.760 1.04],'String',sprintf('Gaussian'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
    fm.lcm.fit.gb          = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.47 0.969 .02 .02], ...
                                       'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaGb,'Callback','SP2_LCM_FitAnaGbFlagUpdate',...
                                       'TooltipString',sprintf('Include Gaussian line broadening in set of optimization parameters'));
    fm.lcm.fit.gbMinLab    = text('Position',[0.720 0.98],'String',sprintf('Min.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.gbAnaLab    = text('Position',[0.820 0.98],'String',sprintf('Curr.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.gbMaxLab    = text('Position',[0.920 0.98],'String',sprintf('Max.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.shiftLab    = text('Position',[1.120 1.04],'String',sprintf('Frequency'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
    fm.lcm.fit.shift       = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.63 0.969 .02 .02], ...
                                       'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaShift,'Callback','SP2_LCM_FitAnaShiftFlagUpdate',...
                                       'TooltipString',sprintf('Include frequency shifs in set of optimization parameters'));
    fm.lcm.fit.shiftMinLab = text('Position',[1.090 0.98],'String',sprintf('Min.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.shiftAnaLab = text('Position',[1.190 0.98],'String',sprintf('Curr.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.shiftMaxLab = text('Position',[1.290 0.98],'String',sprintf('Max.'),'Color',pars.fgTextColor,'FontSize',pars.fontSize);
    fm.lcm.fit.scaleLab    = text('Position',[1.440 1.04],'String',sprintf('Scaling'),'Color',pars.fgTextColor,'FontSize',pars.fontSize,'FontWeight','bold');
end



%--------------------------------------------
%---   P A R A M E T E R    F I E L D S   ---
%--------------------------------------------
if flag.OS==1               % Linux
    for mCnt = 1:lcm.fit.nLim
        %--- metabolite counter ---
        eval(['fm.lcm.fit.mCnt' sprintf('%02i',mCnt) ' = text(''Position'',[-.12 ' ...
              sprintf('%.3f',0.9126-(mCnt-1)*0.0584) '],''FontSize'',pars.fontSize);'])

        %--- metabolite names ---
        eval(['fm.lcm.fit.name' sprintf('%02i',mCnt) '= text(''Position'',[-0.06 ' ...
              sprintf('%.3f',0.9126-(mCnt-1)*0.0584) '],''FontSize'',pars.fontSize);'])

        %--- selection counter ---
        eval(['fm.lcm.fit.count' sprintf('%02i',mCnt) ' = text(''Position'',[0.20 ' ...
              sprintf('%.3f',0.9126-(mCnt-1)*0.0584) '],''FontSize'',pars.fontSize);'])

        %--- metabolite selection flags ---
        eval(['fm.lcm.fit.select' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Radiobutton'',''Units'',''Normalized'',' ...
              '''Position'',[0.18 ' sprintf('%.3f',0.9158-(mCnt-1)*0.0222) ' .03 .03],' ...
              '''BackgroundColor'',' SP2_Vec2PrintStr(pars.bgColor,4) ',' ...
              '''Callback'',''SP2_LCM_FitSelectUpdate(' num2str(mCnt) ')'');'])

        %--- minimum Lorentzian line broadening ---
        eval(['fm.lcm.fit.lbMin' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[215 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum Lorentzian line broadening of selected metabolite [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitLbMinUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current Lorentzian line broadening ---
        eval(['fm.lcm.fit.anaLb' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[255 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current Lorentzian line broadening of selected metabolite [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitLbAnaUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- maximum Lorentzian line broadening ---
        eval(['fm.lcm.fit.lbMax' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[305 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Maximum Lorentzian line broadening of selected metabolite [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitLbMaxUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- minimum Gaussian line broadening ---
        eval(['fm.lcm.fit.gbMin' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[375 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum Gaussian line broadening of selected metabolite [Hz^2]') ''',' ...
              '''Callback'',''SP2_LCM_FitGbMinUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current Gaussian line broadening ---
        eval(['fm.lcm.fit.anaGb' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[415 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current Gaussian line broadening of selected metabolite [Hz^2]') ''',' ...
              '''Callback'',''SP2_LCM_FitGbAnaUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- maximum Gaussian line broadening ---
        eval(['fm.lcm.fit.gbMax' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[465 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Maximum Gaussian line broadening of selected metabolite [Hz^2]') ''',' ...
              '''Callback'',''SP2_LCM_FitGbMaxUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- minimum frequency shift ---
        eval(['fm.lcm.fit.shiftMin' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[535 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum/negative frequency variation [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitShiftMinUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current frequency shift ---
        eval(['fm.lcm.fit.anaShift' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[575 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current frequency shift [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitShiftAnaUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- maximum frequency shift ---
        eval(['fm.lcm.fit.shiftMax' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[625 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Maximum/positive frequency variation [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitShiftMaxUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current scaling ---
        eval(['fm.lcm.fit.anaScale' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[695 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current scaling [a.u.]') ''',' ...
              '''Callback'',''SP2_LCM_FitScaleAnaUpdate(' sprintf('%i',mCnt) ')'');'])
    end
elseif flag.OS==2           % Mac
    for mCnt = 1:lcm.fit.nLim
        %--- metabolite counter ---
        eval(['fm.lcm.fit.mCnt' sprintf('%02i',mCnt) ' = text(''Position'',[-.15 ' ...
              sprintf('%.3f',1.01-(mCnt-1)*0.0273) '],''FontSize'',pars.fontSize);'])

        %--- metabolite names ---
        eval(['fm.lcm.fit.name' sprintf('%02i',mCnt) '= text(''Position'',[-0.11 ' ...
              sprintf('%.3f',1.01-(mCnt-1)*0.0273) '],''FontSize'',pars.fontSize);'])

        %--- selection counter ---
        eval(['fm.lcm.fit.count' sprintf('%02i',mCnt) ' = text(''Position'',[0.04 ' ...
              sprintf('%.3f',1.01-(mCnt-1)*0.0273) '],''FontSize'',pars.fontSize);'])
          
        %--- metabolite selection flags ---
        eval(['fm.lcm.fit.select' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Radiobutton'',''Units'',''Normalized'',' ...
              '''Position'',[0.18 ' sprintf('%.3f',0.9178-(mCnt-1)*0.0222) ' .03 .026],' ...
              '''BackgroundColor'',' SP2_Vec2PrintStr(pars.bgColor,4) ',' ...
              '''Callback'',''SP2_LCM_FitSelectUpdate(' num2str(mCnt) ')'');'])

        %--- minimum Lorentzian line broadening ---
        eval(['fm.lcm.fit.lbMin' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[215 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum Lorentzian line broadening of selected metabolite [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitLbMinUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current Lorentzian line broadening ---
        eval(['fm.lcm.fit.anaLb' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[255 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current Lorentzian line broadening of selected metabolite [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitLbAnaUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- maximum Lorentzian line broadening ---
        eval(['fm.lcm.fit.lbMax' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[305 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Maximum Lorentzian line broadening of selected metabolite [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitLbMaxUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- minimum Gaussian line broadening ---
        eval(['fm.lcm.fit.gbMin' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[375 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum Gaussian line broadening of selected metabolite [Hz^2]') ''',' ...
              '''Callback'',''SP2_LCM_FitGbMinUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current Gaussian line broadening ---
        eval(['fm.lcm.fit.anaGb' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[415 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current Gaussian line broadening of selected metabolite [Hz^2]') ''',' ...
              '''Callback'',''SP2_LCM_FitGbAnaUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- maximum Gaussian line broadening ---
        eval(['fm.lcm.fit.gbMax' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[465 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Maximum Gaussian line broadening of selected metabolite [Hz^2]') ''',' ...
              '''Callback'',''SP2_LCM_FitGbMaxUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- minimum frequency shift ---
        eval(['fm.lcm.fit.shiftMin' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[535 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum/negative frequency variation [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitShiftMinUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current frequency shift ---
        eval(['fm.lcm.fit.anaShift' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[575 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current frequency shift [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitShiftAnaUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- minimum frequency shift ---
        eval(['fm.lcm.fit.shiftMax' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[625 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum/negative frequency variation [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitShiftMaxUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current scaling ---
        eval(['fm.lcm.fit.anaScale' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[695 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current scaling [a.u.]') ''',' ...
              '''Callback'',''SP2_LCM_FitScaleAnaUpdate(' sprintf('%i',mCnt) ')'');'])
    end
else                        % PC
    for mCnt = 1:lcm.fit.nLim
        %--- metabolite counter ---
        eval(['fm.lcm.fit.mCnt' sprintf('%02i',mCnt) ' = text(''Position'',[-.12 ' ...
              sprintf('%.3f',0.9126-(mCnt-1)*0.0584) '],''FontSize'',pars.fontSize);'])

        %--- metabolite names ---
        eval(['fm.lcm.fit.name' sprintf('%02i',mCnt) '= text(''Position'',[-0.06 ' ...
              sprintf('%.3f',0.9126-(mCnt-1)*0.0584) '],''FontSize'',pars.fontSize);'])

        %--- selection counter ---
        eval(['fm.lcm.fit.count' sprintf('%02i',mCnt) ' = text(''Position'',[0.20 ' ...
              sprintf('%.3f',0.9126-(mCnt-1)*0.0584) '],''FontSize'',pars.fontSize);'])
          
        %--- metabolite selection flags ---
        eval(['fm.lcm.fit.select' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Radiobutton'',''Units'',''Normalized'',' ...
              '''Position'',[0.18 ' sprintf('%.3f',0.9158-(mCnt-1)*0.0222) ' .03 .03],' ...
              '''BackgroundColor'',' SP2_Vec2PrintStr(pars.bgColor,4) ',' ...
              '''Callback'',''SP2_LCM_FitSelectUpdate(' num2str(mCnt) ')'');'])

        %--- minimum Lorentzian line broadening ---
        eval(['fm.lcm.fit.lbMin' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[215 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum Lorentzian line broadening of selected metabolite [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitLbMinUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current Lorentzian line broadening ---
        eval(['fm.lcm.fit.anaLb' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[255 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current Lorentzian line broadening of selected metabolite [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitLbAnaUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- maximum Lorentzian line broadening ---
        eval(['fm.lcm.fit.lbMax' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[305 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Maximum Lorentzian line broadening of selected metabolite [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitLbMaxUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- minimum Gaussian line broadening ---
        eval(['fm.lcm.fit.gbMin' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[375 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum Gaussian line broadening of selected metabolite [Hz^2]') ''',' ...
              '''Callback'',''SP2_LCM_FitGbMinUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current Gaussian line broadening ---
        eval(['fm.lcm.fit.anaGb' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[415 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current Gaussian line broadening of selected metabolite [Hz^2]') ''',' ...
              '''Callback'',''SP2_LCM_FitGbAnaUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- maximum Gaussian line broadening ---
        eval(['fm.lcm.fit.gbMax' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[465 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Maximum Gaussian line broadening of selected metabolite [Hz^2]') ''',' ...
              '''Callback'',''SP2_LCM_FitGbMaxUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- minimum frequency shift ---
        eval(['fm.lcm.fit.shiftMin' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[535 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum/negative frequency variation [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitShiftMinUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current frequency shift ---
        eval(['fm.lcm.fit.anaShift' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[575 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current frequency shift [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitShiftAnaUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- minimum frequency shift ---
        eval(['fm.lcm.fit.shiftMax' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[625 ' sprintf('%.3f',830-(mCnt-1)*20) ' 40 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Minimum/negative frequency variation [Hz]') ''',' ...
              '''Callback'',''SP2_LCM_FitShiftMaxUpdate(' sprintf('%i',mCnt) ')'');'])

        %--- current scaling ---
        eval(['fm.lcm.fit.anaScale' sprintf('%02i',mCnt) ' = uicontrol(''Style'',''Edit'',''FontSize'',pars.fontSize,' ...
              '''Position'',[695 ' sprintf('%.3f',830-(mCnt-1)*20) ' 50 20],''BackGroundColor'',pars.bgColor,' ...
              '''TooltipString'',''' sprintf('Current scaling [a.u.]') ''',' ...
              '''Callback'',''SP2_LCM_FitScaleAnaUpdate(' sprintf('%i',mCnt) ')'');'])
    end
end



%--------------------------------
%---   A D O P T    L A S T   ---
%--------------------------------
%--- metabolites selection ---
fm.lcm.fit.selectLast = uicontrol('Style','Pushbutton','String','last','Position',[162 25 40 20],...
                                  'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitSelectAdoptLast',...
                                  'TooltipString',sprintf('Apply selection of last metabolite of basis set to all metabolites'));

%--- Lorentzian line broadening ---
fm.lcm.fit.lbMinLast = uicontrol('Style','Pushbutton','String','last','Position',[215 25 40 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitLbMinAdoptLast',...
                                   'TooltipString',sprintf('Apply minimum Lorentzian line broadening of last applied metabolite to all metabolites'));
fm.lcm.fit.anaLbLast   = uicontrol('Style','Pushbutton','String','last','Position',[255 25 50 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitLbAnaAdoptLast',...
                                   'TooltipString',sprintf('Apply LB selection of last applied metabolite to all metabolites'));
fm.lcm.fit.lbMaxLast = uicontrol('Style','Pushbutton','String','last','Position',[305 25 40 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitLbMaxAdoptLast',...
                                   'TooltipString',sprintf('Apply maximum Lorentzian line broadening of last applied metabolite to all metabolites'));

%--- Gaussian line broadening ---
fm.lcm.fit.gbMinLast = uicontrol('Style','Pushbutton','String','last','Position',[375 25 40 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitGbMinAdoptLast',...
                                   'TooltipString',sprintf('Apply minimum Gaussian line broadening of last applied metabolite to all metabolites'));
fm.lcm.fit.anaGbLast   = uicontrol('Style','Pushbutton','String','last','Position',[415 25 50 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitGbAnaAdoptLast',...
                                   'TooltipString',sprintf('Apply GB selection of last applied metabolite to all metabolites'));
fm.lcm.fit.gbMaxLast = uicontrol('Style','Pushbutton','String','last','Position',[465 25 40 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitGbMaxAdoptLast',...
                                   'TooltipString',sprintf('Apply maximum Gaussian line broadening of last applied metabolite to all metabolites'));

%--- frequency shift ---
fm.lcm.fit.shiftMinLast   = uicontrol('Style','Pushbutton','String','last','Position',[535 25 40 20],...
                                      'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitShiftMinAdoptLast',...
                                      'TooltipString',sprintf('Apply selected minimum frequency variation of last applied metabolite to all metabolites'));
fm.lcm.fit.anaShiftLast   = uicontrol('Style','Pushbutton','String','last','Position',[575 25 50 20],...
                                      'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitShiftAnaAdoptLast',...
                                      'TooltipString',sprintf('Apply selected frequency variation of last applied metabolite to all metabolites'));
fm.lcm.fit.shiftMaxLast   = uicontrol('Style','Pushbutton','String','last','Position',[625 25 40 20],...
                                      'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitShiftMaxAdoptLast',...
                                      'TooltipString',sprintf('Apply selected maximum frequency variation of last applied metabolite to all metabolites'));

%--- current scaling ---
fm.lcm.fit.anaScaleLast = uicontrol('Style','Pushbutton','String','last','Position',[695 25 50 20],...
                                    'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitScaleAnaAdoptLast',...
                                    'TooltipString',sprintf('Apply scaling of last applied metabolite to all metabolites'));


%----------------------------------------------
%---   P A R A M E T E R    R E S E T       ---
%----------------------------------------------
fm.lcm.fit.anaLbReset    = uicontrol('Style','Pushbutton','String','Reset','Position',[215 3 50 20],...
                                     'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitLbReset;',...
                                     'TooltipString',sprintf('Reset selection of Lorentzian line broadenings'));
fm.lcm.fit.anaGbReset    = uicontrol('Style','Pushbutton','String','Reset','Position',[375 3 50 20],...
                                     'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitGbReset;',...
                                     'TooltipString',sprintf('Reset selection of Gaussian line broadenings'));
fm.lcm.fit.anaShiftReset = uicontrol('Style','Pushbutton','String','Reset','Position',[535 3 50 20],...
                                     'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitShiftReset;',...
                                     'TooltipString',sprintf('Reset selection of frequency shifts'));
fm.lcm.fit.anaScaleReset = uicontrol('Style','Pushbutton','String','Reset','Position',[695 3 50 20],...
                                     'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitScaleReset;',...
                                     'TooltipString',sprintf('Reset selection of amplitude scaling'));
       
                                
%----------------------------------------------
%---   P A R A M E T E R    L I N K A G E   ---
%----------------------------------------------
if flag.OS==1               % Linux
    fm.lcm.fit.linkLb    = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.283 0.005 .04 .02],'String','Link', ...
                                     'BackgroundColor',pars.bgColor,'Value',flag.lcmLinkLb,'Callback','SP2_LCM_FitLinkLbUpdate',...
                                     'TooltipString',sprintf('One global vs metabolite-specific exponential line broadening'),'FontSize',pars.fontSize);
    fm.lcm.fit.linkGb    = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.442 0.005 .04 .02],'String','Link', ...
                                     'BackgroundColor',pars.bgColor,'Value',flag.lcmLinkGb,'Callback','SP2_LCM_FitLinkGbUpdate',...
                                     'TooltipString',sprintf('One global vs metabolite-specific Gaussian line broadening'),'FontSize',pars.fontSize);
    fm.lcm.fit.linkShift = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.601 0.005 .04 .02],'String','Link', ...
                                     'BackgroundColor',pars.bgColor,'Value',flag.lcmLinkShift,'Callback','SP2_LCM_FitLinkShiftUpdate',...
                                     'TooltipString',sprintf('One global vs metabolite-specific frequency shift determination'),'FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.linkLb    = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.273 0.005 .07 .02],'String','Link', ...
                                     'BackgroundColor',pars.bgColor,'Value',flag.lcmLinkLb,'Callback','SP2_LCM_FitLinkLbUpdate',...
                                     'TooltipString',sprintf('One global vs metabolite-specific exponential line broadening'),'FontSize',pars.fontSize);
    fm.lcm.fit.linkGb    = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.432 0.005 .07 .02],'String','Link', ...
                                     'BackgroundColor',pars.bgColor,'Value',flag.lcmLinkGb,'Callback','SP2_LCM_FitLinkGbUpdate',...
                                     'TooltipString',sprintf('One global vs metabolite-specific Gaussian line broadening'),'FontSize',pars.fontSize);
    fm.lcm.fit.linkShift = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.591 0.005 .07 .02],'String','Link', ...
                                     'BackgroundColor',pars.bgColor,'Value',flag.lcmLinkShift,'Callback','SP2_LCM_FitLinkShiftUpdate',...
                                     'TooltipString',sprintf('One global vs metabolite-specific frequency shift determination'),'FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.linkLb    = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.283 0.005 .04 .02],'String','Link', ...
                                     'BackgroundColor',pars.bgColor,'Value',flag.lcmLinkLb,'Callback','SP2_LCM_FitLinkLbUpdate',...
                                     'TooltipString',sprintf('One global vs metabolite-specific exponential line broadening'),'FontSize',pars.fontSize);
    fm.lcm.fit.linkGb    = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.442 0.005 .04 .02],'String','Link', ...
                                     'BackgroundColor',pars.bgColor,'Value',flag.lcmLinkGb,'Callback','SP2_LCM_FitLinkGbUpdate',...
                                     'TooltipString',sprintf('One global vs metabolite-specific Gaussian line broadening'),'FontSize',pars.fontSize);
    fm.lcm.fit.linkShift = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.601 0.005 .04 .02],'String','Link', ...
                                     'BackgroundColor',pars.bgColor,'Value',flag.lcmLinkShift,'Callback','SP2_LCM_FitLinkShiftUpdate',...
                                     'TooltipString',sprintf('One global vs metabolite-specific frequency shift determination'),'FontSize',pars.fontSize);
end


%------------------------------------------------
%---   P A R A M E T E R     L I N K A G E    ---
%------------------------------------------------
if flag.OS==1               % Linux
    fm.lcm.fit.combLab        = text('Position',[1.75, 1.04],'String','Combinations','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.comb1Flag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Comb 1',...
                                          'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmComb1,...
                                          'Position',[0.820 0.931 .07 .03],'Callback','SP2_LCM_FitComb1FlagUpdate',...
                                          'TooltipString',sprintf('Perform CRLB analysis for selected metabolite combination'));
    fm.lcm.fit.comb1Str       = uicontrol('Style','Edit','Position', [890 840 75 18],'String',lcm.comb1Str,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitComb1StrUpdate',...
                                          'TooltipString',sprintf('Metabolite (numbers) to be combined for CRLB analysis'),'FontSize',pars.fontSize);
    fm.lcm.fit.comb2Flag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Comb 2',...
                                          'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmComb2,...
                                          'Position',[0.820 0.903 .07 .03],'Callback','SP2_LCM_FitComb2FlagUpdate',...
                                          'TooltipString',sprintf('Perform CRLB analysis for selected metabolite combination'));
    fm.lcm.fit.comb2Str       = uicontrol('Style','Edit','Position', [890 815 75 18],'String',lcm.comb2Str,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitComb2StrUpdate',...
                                          'TooltipString',sprintf('Metabolite (numbers) to be combined for CRLB analysis'),'FontSize',pars.fontSize);
    fm.lcm.fit.comb3Flag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Comb 3',...
                                          'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmComb3,...
                                          'Position',[0.820 0.875 .07 .03],'Callback','SP2_LCM_FitComb3FlagUpdate',...
                                          'TooltipString',sprintf('Perform CRLB analysis for selected metabolite combination'));
    fm.lcm.fit.comb3Str       = uicontrol('Style','Edit','Position', [890 790 75 18],'String',lcm.comb3Str,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitComb3StrUpdate',...
                                          'TooltipString',sprintf('Metabolite (numbers) to be combined for CRLB analysis'),'FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.combLab        = text('Position',[0.905, 1.07],'String','Combinations','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.comb1Flag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Comb 1',...
                                          'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmComb1,...
                                          'Position',[0.820 0.931 .07 .03],'Callback','SP2_LCM_FitComb1FlagUpdate',...
                                          'TooltipString',sprintf('Perform CRLB analysis for metabolite combination'));
    fm.lcm.fit.comb1Str       = uicontrol('Style','Edit','Position', [890 840 75 18],'String',lcm.comb1Str,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitComb1StrUpdate',...
                                          'TooltipString',sprintf('Metabolite (numbers) to be combined for CRLB analysis'),'FontSize',pars.fontSize);
    fm.lcm.fit.comb2Flag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Comb 2',...
                                          'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmComb2,...
                                          'Position',[0.820 0.903 .07 .03],'Callback','SP2_LCM_FitComb2FlagUpdate',...
                                          'TooltipString',sprintf('Perform CRLB analysis for metabolite combination'));
    fm.lcm.fit.comb2Str       = uicontrol('Style','Edit','Position', [890 815 75 18],'String',lcm.comb2Str,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitComb2StrUpdate',...
                                          'TooltipString',sprintf('Metabolite (numbers) to be combined for CRLB analysis'),'FontSize',pars.fontSize);
    fm.lcm.fit.comb3Flag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Comb 3',...
                                          'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmComb3,...
                                          'Position',[0.820 0.875 .07 .03],'Callback','SP2_LCM_FitComb3FlagUpdate',...
                                          'TooltipString',sprintf('Perform CRLB analysis for metabolite combination'));
    fm.lcm.fit.comb3Str       = uicontrol('Style','Edit','Position', [890 790 75 18],'String',lcm.comb3Str,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitComb3StrUpdate',...
                                          'TooltipString',sprintf('Metabolite (numbers) to be combined for CRLB analysis'),'FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.combLab        = text('Position',[1.75, 1.04],'String','Combinations','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.comb1Flag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Comb 1',...
                                          'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmComb1,...
                                          'Position',[0.820 0.931 .07 .03],'Callback','SP2_LCM_FitComb1FlagUpdate',...
                                          'TooltipString',sprintf('Perform CRLB analysis for metabolite combination'));
    fm.lcm.fit.comb1Str       = uicontrol('Style','Edit','Position', [890 840 75 18],'String',lcm.comb1Str,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitComb1StrUpdate',...
                                          'TooltipString',sprintf('Metabolite (numbers) to be combined for CRLB analysis'),'FontSize',pars.fontSize);
    fm.lcm.fit.comb2Flag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Comb 2',...
                                          'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmComb2,...
                                          'Position',[0.820 0.903 .07 .03],'Callback','SP2_LCM_FitComb2FlagUpdate',...
                                          'TooltipString',sprintf('Perform CRLB analysis for metabolite combination'));
    fm.lcm.fit.comb2Str       = uicontrol('Style','Edit','Position', [890 815 75 18],'String',lcm.comb2Str,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitComb2StrUpdate',...
                                          'TooltipString',sprintf('Metabolite (numbers) to be combined for CRLB analysis'),'FontSize',pars.fontSize);
    fm.lcm.fit.comb3Flag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Comb 3',...
                                          'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmComb3,...
                                          'Position',[0.820 0.875 .07 .03],'Callback','SP2_LCM_FitComb3FlagUpdate',...
                                          'TooltipString',sprintf('Perform CRLB analysis for metabolite combination'));
    fm.lcm.fit.comb3Str       = uicontrol('Style','Edit','Position', [890 790 75 18],'String',lcm.comb3Str,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitComb3StrUpdate',...
                                          'TooltipString',sprintf('Metabolite (numbers) to be combined for CRLB analysis'),'FontSize',pars.fontSize);
end


%-------------------------------------------------
%---   V A R I A T I O N     H A N D L I N G   ---
%-------------------------------------------------
if flag.OS==1               % Linux
    fm.lcm.fit.anaVarLab           = text('Position',[1.75, 0.625],'String','Variation','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.anaLbVarMinLab      = text('Position',[1.72, 0.521],'String','Min. LB','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.anaVarLab           = text('Position',[0.905, 0.875],'String','Variation','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.anaLbVarMinLab      = text('Position',[0.905, 0.826],'String','Min. LB','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.anaVarLab           = text('Position',[1.75, 0.625],'String','Variation','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.anaLbVarMinLab      = text('Position',[1.72, 0.521],'String','Min. LB','FontSize',pars.fontSize);
end
fm.lcm.fit.anaLbVarMin         = uicontrol('Style','Edit','Position', [890 695 45 20],'String',sprintf('%.1f',lcm.fit.lbVarMin),...
                                           'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitLbVarMinUpdate',...
                                           'TooltipString',sprintf('Allowed minimum LB variation'),'FontSize',pars.fontSize);
fm.lcm.fit.anaLbVarMinApply    = uicontrol('Style','Pushbutton','String','Apply','Position',[935 695 45 20],...
                                           'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitLbVarMinApply;',...
                                           'TooltipString',sprintf('Apply minimum LB variation to selected metabolites'),'FontSize',pars.fontSize);
if flag.OS==1               % Linux
    fm.lcm.fit.anaLbVarMaxLab      = text('Position',[1.72, 0.447],'String','Max. LB','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.anaLbVarMaxLab      = text('Position',[0.905, 0.792],'String','Max. LB','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.anaLbVarMaxLab      = text('Position',[1.72, 0.447],'String','Max. LB','FontSize',pars.fontSize);
end
fm.lcm.fit.anaLbVarMax         = uicontrol('Style','Edit','Position', [890 670 45 20],'String',sprintf('%.1f',lcm.fit.lbVarMax),...
                                           'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitLbVarMaxUpdate',...
                                           'TooltipString',sprintf('Allowed maximum LB variation'),'FontSize',pars.fontSize);
fm.lcm.fit.anaLbVarMaxApply    = uicontrol('Style','Pushbutton','String','Apply','Position',[935 670 45 20],...
                                           'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitLbVarMaxApply;',...
                                           'TooltipString',sprintf('Apply maximum LB variation to selected metabolites'));
if flag.OS==1               % Linux
    fm.lcm.fit.anaGbVarMinLab      = text('Position',[1.72, 0.373],'String','Min. GB','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.anaGbVarMinLab      = text('Position',[0.905, 0.758],'String','Min. GB','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.anaGbVarMinLab      = text('Position',[1.72, 0.373],'String','Min. GB','FontSize',pars.fontSize);
end
fm.lcm.fit.anaGbVarMin         = uicontrol('Style','Edit','Position', [890 645 45 20],'String',sprintf('%.1f',lcm.fit.gbVarMin),...
                                           'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitGbVarMinUpdate',...
                                           'TooltipString',sprintf('Allowed minimum GB variation'),'FontSize',pars.fontSize);
fm.lcm.fit.anaGbVarMinApply    = uicontrol('Style','Pushbutton','String','Apply','Position',[935 645 45 20],...
                                           'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitGbVarMinApply;',...
                                           'TooltipString',sprintf('Apply minimum GB variation to selected metabolites'));
if flag.OS==1               % Linux
    fm.lcm.fit.anaGbVarMaxLab      = text('Position',[1.72, 0.299],'String','Max. GB','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.anaGbVarMaxLab      = text('Position',[0.905, 0.724],'String','Max. GB','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.anaGbVarMaxLab      = text('Position',[1.72, 0.299],'String','Max. GB','FontSize',pars.fontSize);
end
fm.lcm.fit.anaGbVarMax         = uicontrol('Style','Edit','Position', [890 620 45 20],'String',sprintf('%.1f',lcm.fit.gbVarMax),...
                                           'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitGbVarMaxUpdate',...
                                           'TooltipString',sprintf('Allowed maximum GB variation'),'FontSize',pars.fontSize);
fm.lcm.fit.anaGbVarMaxApply    = uicontrol('Style','Pushbutton','String','Apply','Position',[935 620 45 20],...
                                           'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitGbVarMaxApply;',...
                                           'TooltipString',sprintf('Apply maximum GB variation to selected metabolites'));
if flag.OS==1               % Linux
    fm.lcm.fit.anaShiftVarMinLab   = text('Position',[1.72, 0.225],'String','Min. Shift','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.anaShiftVarMinLab   = text('Position',[0.905, 0.690],'String','Min. Shift','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.anaShiftVarMinLab   = text('Position',[1.72, 0.225],'String','Min. Shift','FontSize',pars.fontSize);
end
fm.lcm.fit.anaShiftVarMin      = uicontrol('Style','Edit','Position', [890 595 45 20],'String',sprintf('%.1f',lcm.fit.shiftVarMin),...
                                           'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitShiftVarMinUpdate',...
                                           'TooltipString',sprintf('Allowed minimum shift variation'),'FontSize',pars.fontSize);
fm.lcm.fit.anaShiftVarMinApply = uicontrol('Style','Pushbutton','String','Apply','Position',[935 595 45 20],...
                                           'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitShiftVarMinApply;',...
                                           'TooltipString',sprintf('Apply minimum shift variation to selected metabolites'));
if flag.OS==1               % Linux
    fm.lcm.fit.anaShiftVarMaxLab   = text('Position',[1.72, 0.151],'String','Max. Shift','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.anaShiftVarMaxLab   = text('Position',[0.905, 0.656],'String','Max. Shift','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.anaShiftVarMaxLab   = text('Position',[1.72, 0.151],'String','Max. Shift','FontSize',pars.fontSize);
end
fm.lcm.fit.anaShiftVarMax      = uicontrol('Style','Edit','Position', [890 570 45 20],'String',sprintf('%.1f',lcm.fit.shiftVarMax),...
                                           'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitShiftVarMaxUpdate',...
                                           'TooltipString',sprintf('Allowed maximum shift variation'),'FontSize',pars.fontSize);
fm.lcm.fit.anaShiftVarMaxApply = uicontrol('Style','Pushbutton','String','Apply','Position',[935 570 45 20],...
                                           'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitShiftVarMaxApply;',...
                                           'TooltipString',sprintf('Apply maximum shift variation to selected metabolites'));

                                 
%-----------------------------------------------------
%---   P O L Y N O M I A L   P A R A M E T E R S   ---
%-----------------------------------------------------
if flag.OS==1               % Linux
    fm.lcm.fit.polynomialLab   = text('Position',[1.75, -0.025],'String','Polynomial','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.polynomial      = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.91 0.595 .02 .02], ...
                                           'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaPoly,'Callback','SP2_LCM_FitPolyFlagUpdate',...
                                           'TooltipString',sprintf('Include polynomial baseline in LCM analysis'));
    fm.lcm.fit.polyAmp0Lab     = text('Position',[1.75, -0.122],'String','0','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.polynomialLab   = text('Position',[0.905, 0.574],'String','Polynomial','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.polynomial      = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.91 0.565 .02 .02], ...
                                           'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaPoly,'Callback','SP2_LCM_FitPolyFlagUpdate',...
                                           'TooltipString',sprintf('Include polynomial baseline in LCM analysis'));
    fm.lcm.fit.polyAmp0Lab     = text('Position',[0.905, 0.526],'String','0','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.polynomialLab   = text('Position',[1.75, -0.025],'String','Polynomial','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.polynomial      = uicontrol('Style','Radiobutton','Units','Normalized','Position',[0.91 0.565 .02 .02], ...
                                           'BackgroundColor',pars.bgColor,'Value',flag.lcmAnaPoly,'Callback','SP2_LCM_FitPolyFlagUpdate',...
                                           'TooltipString',sprintf('Include polynomial baseline in LCM analysis'));
    fm.lcm.fit.polyAmp0Lab     = text('Position',[1.75, -0.122],'String','0','FontSize',pars.fontSize);
end
fm.lcm.fit.polyAmp0        = uicontrol('Style','Edit','Position', [870 475 80 20],'String',sprintf('%.1f',lcm.anaPolyCoeff(11)),...
                                       'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitPolyAmp0Update',...
                                       'TooltipString',sprintf('0 order polynomial amplitude per [ppm]'));
fm.lcm.fit.polyAmp0Reset   = uicontrol('Style','Pushbutton','String','R','Position',[953 475 27 20],...
                                       'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitPolyAmp0Reset;',...
                                       'TooltipString',sprintf('Reset 0 order polynomial amplitude'));
if flag.OS==1               % Linux
    fm.lcm.fit.polyAmp1Lab     = text('Position',[1.75, -0.196],'String','1st','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.polyAmp1Lab     = text('Position',[0.905, 0.492],'String','1st','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.polyAmp1Lab     = text('Position',[1.75, -0.196],'String','1st','FontSize',pars.fontSize);
end
fm.lcm.fit.polyAmp1        = uicontrol('Style','Edit','Position', [870 450 80 20],'String',sprintf('%.1f',lcm.anaPolyCoeff(10)),...
                                       'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitPolyAmp1Update',...
                                       'TooltipString',sprintf('1st order polynomial amplitude per [ppm]'));
fm.lcm.fit.polyAmp1Reset   = uicontrol('Style','Pushbutton','String','R','Position',[953 450 27 20],...
                                       'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitPolyAmp1Reset;',...
                                       'TooltipString',sprintf('Reset 1st order polynomial amplitude'));
if flag.OS==1               % Linux
    fm.lcm.fit.polyAmp2Lab     = text('Position',[1.75, -0.270],'String','2nd','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.polyAmp2Lab     = text('Position',[0.905, 0.458],'String','2nd','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.polyAmp2Lab     = text('Position',[1.75, -0.270],'String','2nd','FontSize',pars.fontSize);
end
fm.lcm.fit.polyAmp2        = uicontrol('Style','Edit','Position', [870 425 80 20],'String',sprintf('%.1f',lcm.anaPolyCoeff(9)),...
                                       'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitPolyAmp2Update',...
                                       'TooltipString',sprintf('2nd order polynomial amplitude per [ppm]'));
fm.lcm.fit.polyAmp2Reset   = uicontrol('Style','Pushbutton','String','R','Position',[953 425 27 20],...
                                       'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitPolyAmp2Reset;',...
                                       'TooltipString',sprintf('Reset 2nd order polynomial amplitude'));
if flag.OS==1               % Linux
    fm.lcm.fit.polyAmp3Lab     = text('Position',[1.75, -0.344],'String','3rd','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.polyAmp3Lab     = text('Position',[0.905, 0.424],'String','3rd','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.polyAmp3Lab     = text('Position',[1.75, -0.344],'String','3rd','FontSize',pars.fontSize);
end
fm.lcm.fit.polyAmp3        = uicontrol('Style','Edit','Position', [870 400 80 20],'String',sprintf('%.1f',lcm.anaPolyCoeff(8)),...
                                       'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitPolyAmp3Update',...
                                       'TooltipString',sprintf('3rd order polynomial amplitude per [ppm]'));
fm.lcm.fit.polyAmp3Reset   = uicontrol('Style','Pushbutton','String','R','Position',[953 400 27 20],...
                                       'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitPolyAmp3Reset;',...
                                       'TooltipString',sprintf('Reset 3rd order polynomial amplitude'));
if flag.OS==1               % Linux
    fm.lcm.fit.polyAmp4Lab     = text('Position',[1.75, -0.418],'String','4th','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.polyAmp4Lab     = text('Position',[0.905, 0.390],'String','4th','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.polyAmp4Lab     = text('Position',[1.75, -0.418],'String','4th','FontSize',pars.fontSize);
end
fm.lcm.fit.polyAmp4        = uicontrol('Style','Edit','Position', [870 375 80 20],'String',sprintf('%.1f',lcm.anaPolyCoeff(7)),...
                                       'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitPolyAmp4Update',...
                                       'TooltipString',sprintf('4th order polynomial amplitude per [ppm]'));
fm.lcm.fit.polyAmp4Reset   = uicontrol('Style','Pushbutton','String','R','Position',[953 375 27 20],...
                                       'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitPolyAmp4Reset;',...
                                       'TooltipString',sprintf('Reset 4th order polynomial amplitude'));
if flag.OS==1               % Linux
    fm.lcm.fit.polyAmp5Lab     = text('Position',[1.75, -0.492],'String','5th','FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.polyAmp5Lab     = text('Position',[0.905, 0.356],'String','5th','FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.polyAmp5Lab     = text('Position',[1.75, -0.492],'String','5th','FontSize',pars.fontSize);
end
fm.lcm.fit.polyAmp5        = uicontrol('Style','Edit','Position', [870 350 80 20],'String',sprintf('%.1f',lcm.anaPolyCoeff(6)),...
                                       'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_FitPolyAmp5Update',...
                                       'TooltipString',sprintf('5th order polynomial amplitude per [ppm]')); 
fm.lcm.fit.polyAmp5Reset   = uicontrol('Style','Pushbutton','String','R','Position',[953 350 27 20],...
                                       'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitPolyAmp5Reset;',...
                                       'TooltipString',sprintf('Reset 5th order polynomial amplitude'));    
fm.lcm.fit.polyAmpAllReset = uicontrol('Style','Pushbutton','String','Reset','Position',[930 325 50 20],...
                                       'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitPolyAmpAllReset;',...
                                       'TooltipString',sprintf('Reset all polynomial amplitudes\n(including the ones not displayed)'));                            
                             

%----------------------------------------------------------------
%---   P H A S E     P H C 0 / 1                              ---
%----------------------------------------------------------------
if flag.OS==1               % Linux
    fm.lcm.fit.phaseLab  = text('Position',[1.75, -0.68],'String','Phasing','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.phc0Flag  = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','PHC0',...
                                     'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaPhc0,...
                                     'Position',[0.820 0.271 .07 .03],'Callback','SP2_LCM_FitPhc0FlagUpdate',...
                                     'TooltipString',sprintf('Include zero order phase correction [deg]\nin LCModel analysis'));
elseif flag.OS==2           % Mac
    fm.lcm.fit.phaseLab  = text('Position',[0.905, 0.26],'String','Phasing','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.phc0Flag  = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','PHC0',...
                                     'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaPhc0,...
                                     'Position',[0.825 0.270 .07 .03],'Callback','SP2_LCM_FitPhc0FlagUpdate',...
                                     'TooltipString',sprintf('Include zero order phase correction [deg]\nin LCModel analysis'));
else                        % PC
    fm.lcm.fit.phaseLab  = text('Position',[1.75, -0.68],'String','Phasing','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.phc0Flag  = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','PHC0',...
                                     'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaPhc0,...
                                     'Position',[0.820 0.271 .07 .03],'Callback','SP2_LCM_FitPhc0FlagUpdate',...
                                     'TooltipString',sprintf('Include zero order phase correction [deg]\nin LCModel analysis'));
end
fm.lcm.fit.phc0      = uicontrol('Style','Edit','Position', [890 247 60 20],'BackGroundColor',pars.bgColor,'FontSize',pars.fontSize,...
                                 'String',sprintf('%.1f',lcm.anaPhc0),'Callback','SP2_LCM_FitPhc0AnaUpdate',...
                                 'TooltipString',sprintf('Zero-order phase of LCM analysis'));
fm.lcm.fit.phc0Reset = uicontrol('Style','Pushbutton','String','R','Position',[953 247 27 20],...
                                 'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitPhc0Reset;',...
                                 'TooltipString',sprintf('Reset LCM zero-order phase ''PHC0'''));                  
if flag.OS==1               % Linux
    fm.lcm.fit.phc1Flag = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','PHC1',...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaPhc1,...
                                    'Position',[0.820 0.245 .07 .03],'Callback','SP2_LCM_FitPhc1FlagUpdate',...
                                    'TooltipString',sprintf('Include zero order phase correction [deg]\nin LCModel analysis'));
elseif flag.OS==2           % Mac
    fm.lcm.fit.phc1Flag = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','PHC1',...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaPhc1,...
                                    'Position',[0.825 0.242 .07 .03],'Callback','SP2_LCM_FitPhc1FlagUpdate',...
                                    'TooltipString',sprintf('Include zero order phase correction [deg]\nin LCModel analysis'));
else                        % PC
    fm.lcm.fit.phc1Flag = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','PHC1',...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaPhc1,...
                                    'Position',[0.820 0.245 .07 .03],'Callback','SP2_LCM_FitPhc1FlagUpdate',...
                                    'TooltipString',sprintf('Include zero order phase correction [deg]\nin LCModel analysis'));
end
fm.lcm.fit.phc1     = uicontrol('Style','Edit','Position', [890 222 60 20],'BackGroundColor',pars.bgColor,'FontSize',pars.fontSize,...
                                'String',sprintf('%.1f',lcm.anaPhc1),'Callback','SP2_LCM_FitPhc1AnaUpdate',...
                                'TooltipString',sprintf('First-order phase of LCM analysis'));
fm.lcm.fit.phc1Reset = uicontrol('Style','Pushbutton','String','R','Position',[953 222 27 20],...
                                 'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitPhc1Reset;',...
                                 'TooltipString',sprintf('Reset LCM first-order phase ''PHC1'''));
                             
%----------------------------------------------------------------
%---   F U R T H E R    A N A L Y S I S     D E T A I L S     ---
%----------------------------------------------------------------
if flag.OS==1               % Linux
    fm.lcm.fit.lsqLab     = text('Position',[1.75, -1.08],'String','LSQ Optimization','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.tolFunLab  = text('Position',[1.75 -1.19],'String','Tol. Fun.','Color',pars.fgTextColor,'FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.lsqLab     = text('Position',[0.905, 0.072],'String','LSQ Optimization','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.tolFunLab  = text('Position',[0.905 0.027],'String','Tol. Fun.','Color',pars.fgTextColor,'FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.lsqLab     = text('Position',[1.75, -1.08],'String','LSQ Optimization','FontWeight','bold','FontSize',pars.fontSize);
    fm.lcm.fit.tolFunLab  = text('Position',[1.75 -1.19],'String','Tol. Fun.','Color',pars.fgTextColor,'FontSize',pars.fontSize);
end
fm.lcm.fit.tolFun     = uicontrol('Style','Edit','Position', [900 110 60 20],'BackGroundColor',pars.bgColor,...
                                  'String',sprintf('%.2g',lcm.fit.tolFun),'Callback','SP2_LCM_FitTolFunUpdate',...
                                  'TooltipString',sprintf('Tolerance function limit of least-squares LCM fit'),'FontSize',pars.fontSize);
if flag.OS==1               % Linux
    fm.lcm.fit.maxIterLab = text('Position',[1.75 -1.26],'String','Max. Iter.','Color',pars.fgTextColor,'FontSize',pars.fontSize);
elseif flag.OS==2           % Mac
    fm.lcm.fit.maxIterLab = text('Position',[0.905 -0.004],'String','Max. Iter.','Color',pars.fgTextColor,'FontSize',pars.fontSize);
else                        % PC
    fm.lcm.fit.maxIterLab = text('Position',[1.75 -1.26],'String','Max. Iter.','Color',pars.fgTextColor,'FontSize',pars.fontSize);
end
fm.lcm.fit.maxIter    = uicontrol('Style','Edit','Position', [900 85 60 20],'BackGroundColor',pars.bgColor,...
                                  'String',sprintf('%.0f',lcm.fit.maxIter),'Callback','SP2_LCM_FitMaxIterUpdate',...
                                  'TooltipString',sprintf('Maximum iteration limit of least-squares LCM fit'),'FontSize',pars.fontSize);
                              
                              
%--- run LCModel analysis ---
fm.lcm.fit.anaDoAnalysis = uicontrol('Style','Pushbutton','String','LCM Analysis','FontWeight','bold','Position',[785 25 100 20],...
                                     'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaDoAnalysis(1);',...
                                     'TooltipString',sprintf('Perform LCModel analysis'));
                              
%--- exit basis tool ---
fm.lcm.fit.exit    = uicontrol('Style','Pushbutton','String','Exit','FontWeight','bold','Position',[890 25 80 20],...
                               'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitExitMain',...
                               'TooltipString',sprintf('Close the analysis details window\n(All parameters are kept)'));

                                   
%--- window update ---
SP2_LCM_FitDetailsWinUpdate


end
