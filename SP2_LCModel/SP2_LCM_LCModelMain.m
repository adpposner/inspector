%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
    function SP2_LCM_LCModelMain
%% 
%%  Main window for LCModel quantification of spectra.
%%
%%  10-2015, Christoph Juchem
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

global fm fmfig pars flag lcm

if ~SP2_ClearWindow
    fprintf('\n--- WARNING ---\nClearing of window figure handles failed.\n\n');
    return
end
flag.fmWin = 7;
pars.figPos = get(fmfig,'Position');
set(fmfig,'Name',' INSPECTOR: Spectral Quantification','Position',...
    [pars.figPos(1) pars.figPos(2) pars.mainDims(3) pars.mainDims(4)])


%**************************************************************************************************
%    D A T A     O R I G I N  
%**************************************************************************************************
fm.lcm.dataData  = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Data', ...
                             'Value',flag.lcmData==1,'Position',[.10 .96 .09 .03],'Callback','SP2_LCM_DataDataUpdate',...
                             'TooltipString',sprintf('Data origin:\nExperimental data from data page'),'FontSize',pars.fontSize);
fm.lcm.dataProc  = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Proc', ...
                             'Value',flag.lcmData==2,'Position',[.192 .96 .09 .03],'Callback','SP2_LCM_DataProcUpdate',...
                             'TooltipString',sprintf('Data origin:\nLoad data from processing page'),'FontSize',pars.fontSize);
fm.lcm.dataMrsi  = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','MRSI', ...
                             'Value',flag.lcmData==3,'Position',[.284 .96 .09 .03],'Callback','SP2_LCM_DataMrsiUpdate',...
                             'TooltipString',sprintf('Data origin:\nLoad data from MRSI page'),'FontSize',pars.fontSize);
fm.lcm.dataSyn   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Syn', ...
                             'Value',flag.lcmData==4,'Position',[.383 .96 .09 .03],'Callback','SP2_LCM_DataSynUpdate',...
                             'TooltipString',sprintf('Data origin:\nLoad data from simulation page'),'FontSize',pars.fontSize);
fm.lcm.dataMarss = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','MARSS', ...
                             'Value',flag.lcmData==5,'Position',[.473 .96 .11 .03],'Callback','SP2_LCM_DataMarssUpdate',...
                             'TooltipString',sprintf('Data origin:\nLoad data from simulation page'),'FontSize',pars.fontSize);
fm.lcm.dataLcm   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','LCM', ...
                             'Value',flag.lcmData==6,'Position',[.595 .96 .09 .03],'Callback','SP2_LCM_DataLcmUpdate',...
                             'TooltipString',sprintf('Data origin:\nLoad data from file below'),'FontSize',pars.fontSize);

%**************************************************************************************************
%    D A T A     F O R M A T  
%**************************************************************************************************
fm.lcm.dataFormat = uicontrol('Style','Popup','String',SP2_CellArrayToStrList(lcm.dataFormatCell,'|'),'Value',flag.lcmDataFormat,...
                              'Position',[410 689 160 8],'Callback','SP2_LCM_DataFormatUpdate','FontSize',pars.fontSize,...
                              'TooltipString',sprintf('Processing and export data format'));
                        
%******************************************************************************
%   L O A D     D A T A     F R O M      F I L E 
%******************************************************************************
%--- data set ---
fm.lcm.dataLab      = text('Position',[-0.145, 1.025],'String','Data','FontSize',pars.fontSize);
if flag.lcmDataFormat==1        % matlab format
    fm.lcm.dataPath = uicontrol('Style','Edit','Position', [60 655 440 18],'String',lcm.dataPathMat,...
                                'HorizontalAlignment','Left','Callback','SP2_LCM_SpecDataPathUpdate','FontSize',pars.fontSize);
elseif flag.lcmDataFormat==2    % text format 
    fm.lcm.dataPath = uicontrol('Style','Edit','Position', [60 655 440 18],'String',lcm.dataPathTxt,...
                                'HorizontalAlignment','Left','Callback','SP2_LCM_SpecDataPathUpdate','FontSize',pars.fontSize);
elseif flag.lcmDataFormat==3    % metabolite (.par) format 
    fm.lcm.dataPath = uicontrol('Style','Edit','Position', [60 655 440 18],'String',lcm.dataPathPar,...
                                'HorizontalAlignment','Left','Callback','SP2_LCM_SpecDataPathUpdate','FontSize',pars.fontSize);
else                             % LCModel (.raw) format 
    fm.lcm.dataPath = uicontrol('Style','Edit','Position', [60 655 440 18],'String',lcm.dataPathRaw,...
                                'HorizontalAlignment','Left','Callback','SP2_LCM_SpecDataPathUpdate','FontSize',pars.fontSize);
end
fm.lcm.dataSelect   = uicontrol('Style','Pushbutton','String','Select',...
                                'Position',[500 655 45 18],'Callback','SP2_LCM_SpecDataSelect','FontSize',pars.fontSize);
fm.lcm.dataLoad     = uicontrol('Style','Pushbutton','String','Load','Position',[545 655 45 18],...
                                'Callback','SP2_LCM_SpecDataAndParsAssign(0);','FontSize',pars.fontSize);

%--- basis set ---
fm.lcm.basisLab     = text('Position',[-0.145, 0.990],'String','Basis','FontSize',pars.fontSize);
fm.lcm.basisPath    = uicontrol('Style','Edit','Position', [60 635 395 18],'String',lcm.basisPath,...
                                'HorizontalAlignment','Left','Callback','SP2_LCM_LcmBasisPathUpdate;','FontSize',pars.fontSize);
fm.lcm.basisSelect  = uicontrol('Style','Pushbutton','String','Select',...
                                'Position',[455 635 45 18],'Callback','SP2_LCM_LcmBasisSelect;',...
                                'TooltipString',sprintf('Select LCM basis set'),'FontSize',pars.fontSize);
fm.lcm.basisManage  = uicontrol('Style','Pushbutton','String','Manage',...
                                'Position',[500 635 45 18],'Callback','SP2_LCM_BasisMain',...
                                'TooltipString',sprintf('Open window for LCM basis set creation and handling'),'FontSize',pars.fontSize);
fm.lcm.basisLoad    = uicontrol('Style','Pushbutton','String','Load',...
                                'Position',[545 635 45 18],'Callback','SP2_LCM_LcmBasisLoad;',...
                                'TooltipString',sprintf('Load LCM basis from file'),'FontSize',pars.fontSize);

%--- export data ---
fm.lcm.exptLab    = text('Position',[-0.145, 0.955],'String','Export','FontSize',pars.fontSize);
if flag.lcmDataFormat==1 || flag.lcmDataFormat==3       % matlab format
    fm.lcm.exptDataPath = uicontrol('Style','Edit','Position', [60 615 440 18],'String',lcm.expt.dataPathMat,...
                                    'HorizontalAlignment','Left','Callback','SP2_LCM_ExptDataPathUpdate;','FontSize',pars.fontSize);
elseif flag.lcmDataFormat==2                            % text format 
    fm.lcm.exptDataPath = uicontrol('Style','Edit','Position', [60 615 440 18],'String',lcm.expt.dataPathTxt,...
                                    'HorizontalAlignment','Left','Callback','SP2_LCM_ExptDataPathUpdate;','FontSize',pars.fontSize);
else                                                    % raw format 
    fm.lcm.exptDataPath = uicontrol('Style','Edit','Position', [60 615 440 18],'String',lcm.expt.dataPathRaw,...
                                    'HorizontalAlignment','Left','Callback','SP2_LCM_ExptDataPathUpdate;','FontSize',pars.fontSize);
end
fm.lcm.exptDataSelect   = uicontrol('Style','Pushbutton','String','Select','Position',[500 615 45 18],...
                                    'Callback','SP2_LCM_ExptDataSelect','FontSize',pars.fontSize);
fm.lcm.exptDataSave     = uicontrol('Style','Pushbutton','String','Save','Position',[545 615 45 18],...
                                    'Callback','SP2_LCM_ExptDataSave;','FontSize',pars.fontSize);

%--- FID apodization ---
fm.lcm.specCutLab       = text('Position',[-0.13, 0.8930],'String','Cut','FontSize',pars.fontSize);
fm.lcm.specCutFlag      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmSpecCut,...
                                    'Position',[.09 .822 .03 .03],'Callback','SP2_LCM_SpecCutFlagUpdate',...
                                    'TooltipString',sprintf('Apodization of FID data vector [pts]'));
fm.lcm.specCutDec3      = uicontrol('Style','Pushbutton','String','<<<','Position',[75 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecCutDec3');
fm.lcm.specCutDec2      = uicontrol('Style','Pushbutton','String','<<','Position',[97 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecCutDec2');
fm.lcm.specCutDec1      = uicontrol('Style','Pushbutton','String','<','Position',[119 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecCutDec1');
fm.lcm.specCutVal       = uicontrol('Style','Edit','Position', [141 580 55 18],'String',sprintf('%.0f',lcm.specCut),...
                                    'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_SpecCutUpdate','FontSize',pars.fontSize);
fm.lcm.specCutInc1      = uicontrol('Style','Pushbutton','String','>','Position',[196 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecCutInc1');
fm.lcm.specCutInc2      = uicontrol('Style','Pushbutton','String','>>','Position',[218 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecCutInc2');
fm.lcm.specCutInc3      = uicontrol('Style','Pushbutton','String','>>>','Position',[240 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecCutInc3');
fm.lcm.specCutReset     = uicontrol('Style','Pushbutton','String','R','Position',[265 580 22 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_SpecCutReset');

%--- FID zero-filling ---
fm.lcm.specZfLab        = text('Position',[-0.13, 0.8491],'String','ZF','FontSize',pars.fontSize);
fm.lcm.specZfFlag       = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmSpecZf,...
                                    'Position',[.09 .7864 .03 .03],'Callback','SP2_LCM_SpecZfFlagUpdate',...
                                    'TooltipString',sprintf('Time domain zero-filling [pts]'));
fm.lcm.specZfDec3       = uicontrol('Style','Pushbutton','String','<<<','Position',[75 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecZfDec3');
fm.lcm.specZfDec2       = uicontrol('Style','Pushbutton','String','<<','Position',[97 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecZfDec2');
fm.lcm.specZfDec1       = uicontrol('Style','Pushbutton','String','<','Position',[119 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecZfDec1');
fm.lcm.specZfVal        = uicontrol('Style','Edit','Position', [141 555 55 18],'String',sprintf('%.0f',lcm.specZf),...
                                    'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_SpecZfUpdate','FontSize',pars.fontSize);
fm.lcm.specZfInc1       = uicontrol('Style','Pushbutton','String','>','Position',[196 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecZfInc1');
fm.lcm.specZfInc2       = uicontrol('Style','Pushbutton','String','>>','Position',[218 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecZfInc2');
fm.lcm.specZfInc3       = uicontrol('Style','Pushbutton','String','>>>','Position',[240 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecZfInc3');
fm.lcm.specZfReset      = uicontrol('Style','Pushbutton','String','R','Position',[265 555 22 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_SpecZfReset');
                           
%--- exponential line broadening ---
fm.lcm.specLbLab        = text('Position',[-0.13, 0.8053],'String','LB','FontSize',pars.fontSize);
fm.lcm.specLbFlag       = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmSpecLb,...
                                    'Position',[.09 .7508 .03 .03],'Callback','SP2_LCM_SpecLbFlagUpdate',...
                                    'TooltipString',sprintf('Exponential line broadening [Hz]\n(compare Gaussian broadening, GB)'));
fm.lcm.specLbDec3       = uicontrol('Style','Pushbutton','String','<<<','Position',[75 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecLbDec3');
fm.lcm.specLbDec2       = uicontrol('Style','Pushbutton','String','<<','Position',[97 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecLbDec2');
fm.lcm.specLbDec1       = uicontrol('Style','Pushbutton','String','<','Position',[119 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecLbDec1');
fm.lcm.specLbVal        = uicontrol('Style','Edit','Position', [141 530 55 18],'String',sprintf('%.2f',lcm.specLb),...
                                    'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_SpecLbUpdate','FontSize',pars.fontSize);
fm.lcm.specLbInc1       = uicontrol('Style','Pushbutton','String','>','Position',[196 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecLbInc1');
fm.lcm.specLbInc2       = uicontrol('Style','Pushbutton','String','>>','Position',[218 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecLbInc2');
fm.lcm.specLbInc3       = uicontrol('Style','Pushbutton','String','>>>','Position',[240 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecLbInc3');
fm.lcm.specLbReset      = uicontrol('Style','Pushbutton','String','R','Position',[265 530 22 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_SpecLbReset');
                         
%--- Gaussian line broadening ---
fm.lcm.specGbLab        = text('Position',[-0.13, 0.7614],'String','GB','FontSize',pars.fontSize);
fm.lcm.specGbFlag       = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmSpecGb==1,...
                                    'Position',[.09 .7151 .03 .03],'Callback','SP2_LCM_SpecGbFlagUpdate',...
                                    'TooltipString',sprintf('Gaussian line broadening [Hz^2]\n(compare exponential broadening, LB)'));
fm.lcm.specGbDec3       = uicontrol('Style','Pushbutton','String','<<<','Position',[75 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecGbDec3');
fm.lcm.specGbDec2       = uicontrol('Style','Pushbutton','String','<<','Position',[97 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecGbDec2');
fm.lcm.specGbDec1       = uicontrol('Style','Pushbutton','String','<','Position',[119 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecGbDec1');
fm.lcm.specGbVal        = uicontrol('Style','Edit','Position', [141 505 55 18],'String',sprintf('%.2f',lcm.specGb),...
                                    'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_SpecGbUpdate','FontSize',pars.fontSize);
fm.lcm.specGbInc1       = uicontrol('Style','Pushbutton','String','>','Position',[196 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecGbInc1');
fm.lcm.specGbInc2       = uicontrol('Style','Pushbutton','String','>>','Position',[218 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecGbInc2');
fm.lcm.specGbInc3       = uicontrol('Style','Pushbutton','String','>>>','Position',[240 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecGbInc3');
fm.lcm.specGbReset      = uicontrol('Style','Pushbutton','String','R','Position',[265 505 22 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_SpecGbReset');
                        
%--- selection of processing update ---
fm.lcm.updProcTarget    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Target',...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmUpdProcTarget,...
                                    'Position',[.09 .6794 .13 .03],'Callback','SP2_LCM_UpdateProcTargetUpdate',...
                                    'TooltipString',sprintf('Update processing of target spectrum when parameters are changed'));
fm.lcm.updProcBasis     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Basis',...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmUpdProcBasis,...
                                    'Position',[.205 .6794 .13 .03],'Callback','SP2_LCM_UpdateProcBasisUpdate',...
                                    'TooltipString',sprintf('Update processing of basis spectra when parameters are changed'));
fm.lcm.updProcResult    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Result',...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmUpdProcResult,...
                                    'Position',[.315 .6794 .13 .03],'Callback','SP2_LCM_UpdateProcResultUpdate',...
                                    'TooltipString',sprintf('Update processing of result spectra when parameters are changed'),'Enable','off');

%--- phase correction: zero order ---          
fm.lcm.specPhc0Lab      = text('Position',[0.5, 0.8930],'String','PHC0','FontSize',pars.fontSize);
fm.lcm.specPhc0Flag     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmSpecPhc0==1,...
                                    'Position',[.59 .822 .03 .03],'Callback','SP2_LCM_SpecPhc0FlagUpdate',...
                                    'TooltipString',sprintf('Zero order phase correction [deg]'));
fm.lcm.specPhc0Dec3     = uicontrol('Style','Pushbutton','String','<<<','Position',[376 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc0Dec3');
fm.lcm.specPhc0Dec2     = uicontrol('Style','Pushbutton','String','<<','Position',[398 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc0Dec2');
fm.lcm.specPhc0Dec1     = uicontrol('Style','Pushbutton','String','<','Position',[420 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc0Dec1');
fm.lcm.specPhc0Val      = uicontrol('Style','Edit','Position', [442 580 55 18],'String',sprintf('%.1f',lcm.specPhc0),'BackGroundColor',pars.bgColor,...
                                    'Callback','SP2_LCM_SpecPhc0Update','FontSize',pars.fontSize);
fm.lcm.specPhc0Inc1     = uicontrol('Style','Pushbutton','String','>','Position',[497 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc0Inc1');
fm.lcm.specPhc0Inc2     = uicontrol('Style','Pushbutton','String','>>','Position',[519 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc0Inc2');
fm.lcm.specPhc0Inc3     = uicontrol('Style','Pushbutton','String','>>>','Position',[543 580 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc0Inc3');
fm.lcm.specPhc0Reset    = uicontrol('Style','Pushbutton','String','R','Position',[568 580 22 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_SpecPhc0Reset');

%--- phase correction: first order ---          
fm.lcm.specPhc1Lab      = text('Position',[0.5, 0.8491],'String','PHC1','FontSize',pars.fontSize);
fm.lcm.specPhc1Flag     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmSpecPhc1==1,...
                                    'Position',[.59 .7864 .03 .03],'Callback','SP2_LCM_SpecPhc1FlagUpdate',...
                                    'TooltipString',sprintf('First order phase correction [deg]'));
fm.lcm.specPhc1Dec3     = uicontrol('Style','Pushbutton','String','<<<','Position',[376 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc1Dec3');
fm.lcm.specPhc1Dec2     = uicontrol('Style','Pushbutton','String','<<','Position',[398 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc1Dec2');
fm.lcm.specPhc1Dec1     = uicontrol('Style','Pushbutton','String','<','Position',[420 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc1Dec1');
fm.lcm.specPhc1Val      = uicontrol('Style','Edit','Position', [442 555 55 18],'String',sprintf('%.1f',lcm.specPhc1),...
                                    'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_SpecPhc1Update','FontSize',pars.fontSize);
fm.lcm.specPhc1Inc1     = uicontrol('Style','Pushbutton','String','>','Position',[497 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc1Inc1');
fm.lcm.specPhc1Inc2     = uicontrol('Style','Pushbutton','String','>>','Position',[519 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc1Inc2');
fm.lcm.specPhc1Inc3     = uicontrol('Style','Pushbutton','String','>>>','Position',[543 555 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecPhc1Inc3');
fm.lcm.specPhc1Reset    = uicontrol('Style','Pushbutton','String','R','Position',[568 555 22 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_SpecPhc1Reset');

%--- amplitude scaling ---
fm.lcm.specScaleLab     = text('Position',[0.5, 0.8053],'String','Scale','FontSize',pars.fontSize);
fm.lcm.specScaleFlag    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmSpecScale==1,...
                                    'Position',[.59 .7508 .03 .03],'Callback','SP2_LCM_SpecScaleFlagUpdate',...
                                    'TooltipString',sprintf('Amplitude scaling [1]'));
fm.lcm.specScaleDec3    = uicontrol('Style','Pushbutton','String','<<<','Position',[376 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecScaleDec3');
fm.lcm.specScaleDec2    = uicontrol('Style','Pushbutton','String','<<','Position',[398 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecScaleDec2');
fm.lcm.specScaleDec1    = uicontrol('Style','Pushbutton','String','<','Position',[420 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecScaleDec1');
fm.lcm.specScaleVal     = uicontrol('Style','Edit','Position', [442 530 55 18],'String',sprintf('%.3f',lcm.specScale),...
                                    'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_SpecScaleUpdate','FontSize',pars.fontSize);
fm.lcm.specScaleInc1    = uicontrol('Style','Pushbutton','String','>','Position',[497 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecScaleInc1');
fm.lcm.specScaleInc2    = uicontrol('Style','Pushbutton','String','>>','Position',[519 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecScaleInc2');
fm.lcm.specScaleInc3    = uicontrol('Style','Pushbutton','String','>>>','Position',[543 530 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecScaleInc3');
fm.lcm.specScaleReset   = uicontrol('Style','Pushbutton','String','R','Position',[568 530 22 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_SpecScaleReset');

%--- frequency shift --- 
fm.lcm.specShiftLab     = text('Position',[0.5, 0.7614],'String','Shift','FontSize',pars.fontSize);
fm.lcm.specShiftFlag    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmSpecShift==1,...
                                    'Position',[.59 .7151 .03 .03],'Callback','SP2_LCM_SpecShiftFlagUpdate',...
                                    'TooltipString',sprintf('Spectral shift [Hz]'));
fm.lcm.specShiftDec3    = uicontrol('Style','Pushbutton','String','<<<','Position',[376 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecShiftDec3');
fm.lcm.specShiftDec2    = uicontrol('Style','Pushbutton','String','<<','Position',[398 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecShiftDec2');
fm.lcm.specShiftDec1    = uicontrol('Style','Pushbutton','String','<','Position',[420 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecShiftDec1');
fm.lcm.specShiftVal     = uicontrol('Style','Edit','Position', [442 505 55 18],'String',sprintf('%.3f',lcm.specShift),...
                                    'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_SpecShiftUpdate');
fm.lcm.specShiftInc1    = uicontrol('Style','Pushbutton','String','>','Position',[497 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecShiftInc1');
fm.lcm.specShiftInc2    = uicontrol('Style','Pushbutton','String','>>','Position',[519 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecShiftInc2');
fm.lcm.specShiftInc3    = uicontrol('Style','Pushbutton','String','>>>','Position',[543 505 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecShiftInc3');
fm.lcm.specShiftReset   = uicontrol('Style','Pushbutton','String','R','Position',[568 505 22 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_SpecShiftReset');

%--- baseline offset ---
fm.lcm.specOffsetLab    = text('Position',[0.5, 0.7175],'String','Offset','FontSize',pars.fontSize);
fm.lcm.specOffsetFlag   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,...
                                    'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmSpecOffset==1,...
                                    'Position',[.59 .6795 .03 .03],'Callback','SP2_LCM_SpecOffsetFlagUpdate',...
                                    'TooltipString',sprintf('Baseline offset [a.u.]'));
fm.lcm.specOffsetDec3   = uicontrol('Style','Pushbutton','String','<<<','Position',[376 480 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecOffsetDec3');
fm.lcm.specOffsetDec2   = uicontrol('Style','Pushbutton','String','<<','Position',[398 480 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecOffsetDec2');
fm.lcm.specOffsetDec1   = uicontrol('Style','Pushbutton','String','<','Position',[420 480 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecOffsetDec1');
fm.lcm.specOffsetVal    = uicontrol('Style','Edit','Position', [442 480 55 18],'String',num2str(lcm.specOffset),...
                                    'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_SpecOffsetUpdate'); 
fm.lcm.specOffsetInc1   = uicontrol('Style','Pushbutton','String','>','Position',[497 480 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecOffsetInc1');
fm.lcm.specOffsetInc2   = uicontrol('Style','Pushbutton','String','>>','Position',[519 480 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecOffsetInc2');
fm.lcm.specOffsetInc3   = uicontrol('Style','Pushbutton','String','>>>','Position',[543 480 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_SpecOffsetInc3');
fm.lcm.specOffsetReset  = uicontrol('Style','Pushbutton','String','R','Position',[568 480 22 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_SpecOffsetReset');

% spectrum visualization: ppm window
fm.lcm.ppmShowLab    = text('Position',[-0.13, 0.635],'String','Frequ.','FontSize',pars.fontSize);
fm.lcm.ppmShowFull   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Full', ...
                                  'Value',flag.lcmPpmShow==0,'Position',[.115 .61 .15 .03],'Callback','SP2_LCM_PpmShowFullUpdate', ...
                                  'FontSize',pars.fontSize);
fm.lcm.ppmShowDirect = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized', ...
                                  'Value',flag.lcmPpmShow==1,'Position',[.205 .61 .15 .03],'Callback','SP2_LCM_PpmShowDirectUpdate',...
                                  'FontSize',pars.fontSize);
fm.lcm.ppmShowMinDecr = uicontrol('Style','Pushbutton','String','-','Position',[145 430 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmShowMinDecr','FontSize',pars.fontSize);
fm.lcm.ppmShowMin     = uicontrol('Style','Edit','Position', [163 430 40 18],'String',sprintf('%.2f',lcm.ppmShowMin),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_PpmShowWinUpdate','FontSize',pars.fontSize);
fm.lcm.ppmShowMinIncr = uicontrol('Style','Pushbutton','String','+','Position',[203 430 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmShowMinIncr','FontSize',pars.fontSize);
fm.lcm.ppmShowMaxDecr = uicontrol('Style','Pushbutton','String','-','Position',[226 430 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmShowMaxDecr','FontSize',pars.fontSize);
fm.lcm.ppmShowMax     = uicontrol('Style','Edit','Position', [244 430 40 18],'String',sprintf('%.2f',lcm.ppmShowMax),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_PpmShowWinUpdate','FontSize',pars.fontSize);
fm.lcm.ppmShowMaxIncr = uicontrol('Style','Pushbutton','String','+','Position',[284 430 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmShowMaxIncr','FontSize',pars.fontSize);

% spectrum visualization: amplitude window
fm.lcm.amplLab    = text('Position',[-0.13, 0.580],'String','Ampl.','FontSize',pars.fontSize);
fm.lcm.amplAuto   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Auto', ...
                               'Value',flag.lcmAmpl==0,'Position',[.115 .567 .15 .03],'Callback','SP2_LCM_AmplAutoUpdate','FontSize',pars.fontSize);
fm.lcm.amplDirect = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized', ...
                               'Value',flag.lcmAmpl==1,'Position',[.205 .567 .15 .03],'Callback','SP2_LCM_AmplDirectUpdate','FontSize',pars.fontSize);
fm.lcm.amplMinDecr = uicontrol('Style','Pushbutton','String','-','Position',[145 400 18 18],'FontWeight','bold','Callback','SP2_LCM_AmplWinMinDecr','FontSize',pars.fontSize);
fm.lcm.amplMin     = uicontrol('Style','Edit','Position', [163 400 50 18],'String',sprintf('%.0f',lcm.amplMin),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_AmplWinUpdate','FontSize',pars.fontSize);
fm.lcm.amplMinIncr = uicontrol('Style','Pushbutton','String','+','Position',[213 400 18 18],'FontWeight','bold','Callback','SP2_LCM_AmplWinMinIncr','FontSize',pars.fontSize);
fm.lcm.amplMaxDecr = uicontrol('Style','Pushbutton','String','-','Position',[236 400 18 18],'FontWeight','bold','Callback','SP2_LCM_AmplWinMaxDecr','FontSize',pars.fontSize);
fm.lcm.amplMax     = uicontrol('Style','Edit','Position', [254 400 50 18],'String',sprintf('%.0f',lcm.amplMax),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_AmplWinUpdate','FontSize',pars.fontSize);
fm.lcm.amplMaxIncr = uicontrol('Style','Pushbutton','String','+','Position',[304 400 18 18],'FontWeight','bold','Callback','SP2_LCM_AmplWinMaxIncr','FontSize',pars.fontSize);

%--- FWHM / integral area definition ---
fm.lcm.ppmTargetLab     = text('Position',[-0.13, 0.525],'String','Target','FontSize',pars.fontSize);
fm.lcm.ppmTargetMinDecr = uicontrol('Style','Pushbutton','String','-','Position',[75 370 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmTargetMinDecr','FontSize',pars.fontSize);
fm.lcm.ppmTargetMin     = uicontrol('Style','Edit','Position', [93 370 45 18],'String',sprintf('%.2f',lcm.ppmTargetMin),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_PpmTargetWinUpdate','FontSize',pars.fontSize);
fm.lcm.ppmTargetMinIncr = uicontrol('Style','Pushbutton','String','+','Position',[138 370 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmTargetMinIncr','FontSize',pars.fontSize);
fm.lcm.ppmTargetMaxDecr = uicontrol('Style','Pushbutton','String','-','Position',[161 370 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmTargetMaxDecr','FontSize',pars.fontSize);
fm.lcm.ppmTargetMax     = uicontrol('Style','Edit','Position', [179 370 45 18],'String',sprintf('%.2f',lcm.ppmTargetMax),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_PpmTargetWinUpdate','FontSize',pars.fontSize);
fm.lcm.ppmTargetMaxIncr = uicontrol('Style','Pushbutton','String','+','Position',[224 370 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmTargetMaxIncr','FontSize',pars.fontSize);
                            
%--- noise area definition ---
fm.lcm.ppmNoiseLab      = text('Position',[-0.13, 0.470],'String','Noise','FontSize',pars.fontSize);
fm.lcm.ppmNoiseMinDecr  = uicontrol('Style','Pushbutton','String','-','Position',[75 340 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmNoiseMinDecr','FontSize',pars.fontSize);
fm.lcm.ppmNoiseMin      = uicontrol('Style','Edit','Position', [93 340 45 18],'String',sprintf('%.2f',lcm.ppmNoiseMin),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_PpmNoiseWinUpdate','FontSize',pars.fontSize);
fm.lcm.ppmNoiseMinIncr  = uicontrol('Style','Pushbutton','String','+','Position',[138 340 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmNoiseMinIncr','FontSize',pars.fontSize);
fm.lcm.ppmNoiseMaxDecr  = uicontrol('Style','Pushbutton','String','-','Position',[161 340 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmNoiseMaxDecr','FontSize',pars.fontSize);
fm.lcm.ppmNoiseMax      = uicontrol('Style','Edit','Position', [179 340 45 18],'String',sprintf('%.2f',lcm.ppmNoiseMax),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_PpmNoiseWinUpdate','FontSize',pars.fontSize);
fm.lcm.ppmNoiseMaxIncr  = uicontrol('Style','Pushbutton','String','+','Position',[224 340 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmNoiseMaxIncr','FontSize',pars.fontSize);

%--- spectral offset definition ---                                
fm.lcm.offsetPpmFlag    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Range', ...
                                    'Value',flag.lcmOffset,'Position',[.540 .526 .10 .03],'Callback','SP2_LCM_OffsetPpmWinFlagUpdate','FontSize',pars.fontSize);
fm.lcm.ppmOffsetMinDecr = uicontrol('Style','Pushbutton','String','-','Position',[381 370 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmOffsetMinDecr','FontSize',pars.fontSize);
fm.lcm.ppmOffsetMin     = uicontrol('Style','Edit','Position', [399 370 40 18],'String',sprintf('%.2f',lcm.ppmOffsetMin),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_OffsetPpmWinUpdate','FontSize',pars.fontSize);
fm.lcm.ppmOffsetMinIncr = uicontrol('Style','Pushbutton','String','+','Position',[439 370 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmOffsetMinIncr','FontSize',pars.fontSize);
fm.lcm.ppmOffsetMaxDecr = uicontrol('Style','Pushbutton','String','-','Position',[462 370 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmOffsetMaxDecr','FontSize',pars.fontSize);
fm.lcm.ppmOffsetMax     = uicontrol('Style','Edit','Position', [480 370 40 18],'String',num2str(lcm.ppmOffsetMax),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_OffsetPpmWinUpdate','FontSize',pars.fontSize);
fm.lcm.ppmOffsetMaxIncr = uicontrol('Style','Pushbutton','String','+','Position',[520 370 18 18],'FontWeight','bold','Callback','SP2_LCM_PpmOffsetMaxIncr','FontSize',pars.fontSize);
fm.lcm.offsetValFlag    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Value', ...
                                    'Value',~flag.lcmOffset,'Position',[.540 .483 .10 .03],'Callback','SP2_LCM_OffsetValueFlagUpdate','FontSize',pars.fontSize);
fm.lcm.offsetDec3       = uicontrol('Style','Pushbutton','String','<<<','Position',[381 340 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_OffsetDec3');
fm.lcm.offsetDec2       = uicontrol('Style','Pushbutton','String','<<','Position',[403 340 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_OffsetDec2');
fm.lcm.offsetDec1       = uicontrol('Style','Pushbutton','String','<','Position',[425 340 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_OffsetDec1');
fm.lcm.offsetVal        = uicontrol('Style','Edit','Position', [447 340 70 18],'String',sprintf('%.2f',lcm.offsetVal),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_OffsetValueUpdate','FontSize',pars.fontSize);
fm.lcm.offsetInc1       = uicontrol('Style','Pushbutton','String','>','Position',[517 340 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_OffsetInc1');
fm.lcm.offsetInc2       = uicontrol('Style','Pushbutton','String','>>','Position',[539 340 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_OffsetInc2');
fm.lcm.offsetInc3       = uicontrol('Style','Pushbutton','String','>>>','Position',[561 340 22 18],'FontSize',pars.fontSize,'FontWeight','bold','Callback','SP2_LCM_OffsetInc3');
fm.lcm.offsetReset      = uicontrol('Style','Pushbutton','String','Zero','Position',[381 317 60 18],...
                                    'FontSize',pars.fontSize,'Callback','SP2_LCM_OffsetZero','TooltipString',sprintf('Reset of amplitude offset\nfor SNR, FWHM & Integral calcuations'),'FontSize',pars.fontSize);
fm.lcm.offsetAssign     = uicontrol('Style','Pushbutton','String','Assign','Position',[441 317 60 18],'FontSize',pars.fontSize,'Callback','SP2_LCM_OffsetAssign',...
                                    'TooltipString',sprintf('Manual assignment of amplitude offset\nfor SNR, FWHM & Integral calcuations'),'FontSize',pars.fontSize);

%--- analysis options ---
fm.lcm.anaLab       = text('Position',[-0.13, 0.415],'String','Analysis','FontSize',pars.fontSize);
fm.lcm.anaSNR       = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','SNR', ...
                                'Value',flag.lcmAnaSNR,'Position',[.13 .433 .15 .03],'Callback','SP2_LCM_AnaSnrUpdate',...
                                'TooltipString',sprintf('Analysis of signal-to-noise ratio (SNR) of selected spectrum'),'FontSize',pars.fontSize);
fm.lcm.anaFWHM      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','FWHM', ...
                                'Value',flag.lcmAnaFWHM,'Position',[.22 .433 .15 .03],'Callback','SP2_LCM_AnaFwhmUpdate',...
                                'TooltipString',sprintf('Full width at half maximum (FWHM) analysis of selected spectrum'),'FontSize',pars.fontSize);
fm.lcm.anaIntegr    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Integral', ...
                                'Value',flag.lcmAnaIntegr,'Position',[.32 .433 .15 .03],'Callback','SP2_LCM_AnaIntegralUpdate',...
                                'TooltipString',sprintf('Spectral integration of selected spectrum'),'FontSize',pars.fontSize);
fm.lcm.anaFrequDiff = uicontrol('Style','Pushbutton','String','Delta','Position',[260 308 50 18],'FontSize',pars.fontSize,...
                                'FontName','Helvetica','Callback','SP2_LCM_AnaFrequDifference',...
                                'TooltipString',sprintf('Measurement of frequency difference between two spectral positions'),'FontSize',pars.fontSize);

% spectrum visualization: ppm calibration
fm.lcm.ppmCalibLab      = text('Position',[0.58, 0.635],'String','Calib.','FontSize',pars.fontSize);
fm.lcm.ppmAssignProc    = uicontrol('Style','Pushbutton','String','P','Position',[400 430 25 18],...
                                    'FontSize',pars.fontSize,'Callback','SP2_LCM_PpmAssignFromProc',...
                                    'TooltipString',sprintf('Copy frequency calibration from Processing page'),'FontSize',pars.fontSize);
fm.lcm.ppmCalib         = uicontrol('Style','Edit','Position', [425 430 50 18],'String',num2str(lcm.ppmCalib),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_PpmCalibUpdate',...
                                    'TooltipString',sprintf('Frequency [ppm] calibration of center (water) frequency'),'FontSize',pars.fontSize);
fm.lcm.ppmAssign        = uicontrol('Style','Edit','Position', [481 430 40 18],'String',num2str(lcm.ppmAssign),'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_PpmAssignUpdate',...
                                    'TooltipString',sprintf('Frequency [ppm] value to be assigned to selected peak'),'FontSize',pars.fontSize);
fm.lcm.ppmAssignToPeak  = uicontrol('Style','Pushbutton','String','Assign','Position',[521 430 49 18],...
                                    'FontSize',pars.fontSize,'Callback','SP2_LCM_PpmAssignToPeak',...
                                    'TooltipString',sprintf('Assign ppm value (to the left) to\nspectral position in selected spectrum'),'FontSize',pars.fontSize);
fm.lcm.ppmAssignToPeakZ = uicontrol('Style','Pushbutton','String','Z ','Position',[570 430 22 18],...
                                    'FontSize',pars.fontSize,'Callback','SP2_LCM_PpmAssignToPeakZoom',...
                                    'TooltipString',sprintf('Zoomed assignment of ppm value to\nspectral position in selected spectrum.\nZoomed window: Current value +/- 0.3 ppm'),'FontSize',pars.fontSize);
                       
% spectrum visualization: ppm position display
fm.lcm.ppmShowPosLab    = text('Position',[0.58, 0.580],'String','Position','FontSize',pars.fontSize);
fm.lcm.ppmShowPos       = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','Value',flag.lcmPpmShowPos,...
                                     'Position',[0.67 0.567 .03 .03],'Callback','SP2_LCM_PpmShowPosFlagUpdate','FontSize',pars.fontSize);
fm.lcm.ppmShowPosVal    = uicontrol('Style','Edit','Position',[425 400 50 18],'String',num2str(lcm.ppmShowPos),'BackGroundColor',pars.bgColor,...
                                     'Callback','SP2_LCM_PpmShowPosValUpdate','TooltipString',sprintf('Frequency [ppm] position to be displayed'),'FontSize',pars.fontSize);
fm.lcm.ppmShowPosAssign = uicontrol('Style','Pushbutton','String','Assign','Position',[475 400 55 18],...
                                     'FontSize',pars.fontSize,'Callback','SP2_LCM_PpmShowPosAssign',...
                                     'TooltipString',sprintf('Manual assignment of frequency position [ppm]'));

%--- display of target data ---
fm.lcm.plotFidOrig = uicontrol('Style','Pushbutton','String','FID Orig','Position',[20 270 80 20],...
                               'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_ProcAndPlotFidOrig;',...
                               'TooltipString',sprintf('Show original FID before data manipulation'));
fm.lcm.plotFid     = uicontrol('Style','Pushbutton','String','FID','Position',[100 270 80 20],...
                               'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_ProcAndPlotFid;',...
                               'TooltipString',sprintf('Show FID including data manipulation'));
fm.lcm.plotSpec    = uicontrol('Style','Pushbutton','String','Spec','Position',[180 270 80 20],...
                               'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_ProcAndPlotSpec;',...
                               'TooltipString',sprintf('Show spectrum'));
                         
%--- run LCModel analysis ---
fm.lcm.anaDoAnalysis = uicontrol('Style','Pushbutton','String','LCM Analysis','FontWeight','bold','Position',[20 230 110 20],...
                                 'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaDoAnalysis(1);',...
                                 'TooltipString',sprintf('Perform LCModel analysis'));

%--- real vs. complex information ---                             
fm.lcm.anaReal      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','R', ...
                                'Value',flag.lcmRealComplex,'Position',[.230 .325 .15 .03],'Callback','SP2_LCM_AnaRealUpdate',...
                                'TooltipString',sprintf('Analysis of spectrum real part (only).'),'FontSize',pars.fontSize);
fm.lcm.anaComplex   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','C', ...
                                'Value',~flag.lcmRealComplex,'Position',[.285 .325 .15 .03],'Callback','SP2_LCM_AnaComplexUpdate',...
                                'TooltipString',sprintf('Analysis of real and imaginary spectral parts\n(assuming quadrature-type detection)'),'FontSize',pars.fontSize);
                            
%--- fit details window ---
fm.lcm.fitDetailsWin = uicontrol('Style','Pushbutton','String','Fit Details','Position',[20 205 110 20],...
                                 'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_FitDetailsMain',...
                                 'TooltipString',sprintf('Open window for selection of LCM analysis details'),'FontSize',pars.fontSize);
                            
% %--- baseline window ---
% fm.lcm.baseWin       = uicontrol('Style','Pushbutton','String','Baseline Handling','Position',[125 215 130 20],...
%                                  'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_BaseMain',...
%                                  'TooltipString',sprintf('Open window for LCM baseline handling'),'Enable','off');

%--- CRLB analysis ---
fm.lcm.anaDoCalcCRLB = uicontrol('Style','Pushbutton','String','Calc CRLB','Position',[130 205 110 20],...
                                 'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaDoCalcCRLB(1);',...
                                 'TooltipString',sprintf('Perform Cramer-Rao Lower Bound analysis'));
fm.lcm.anaMcStop     = uicontrol('Style','Pushbutton','String','MC Stop','Position',[240 205 60 20],...
                                 'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_MCarloStop;',...
                                 'TooltipString',sprintf('Interrupt computation\n(only works during first simulation)'));
                             
%--- Monte-Carlo analysis ---
fm.lcm.anaDoMcSinglet  = uicontrol('Style','Pushbutton','String','MC Sim Singlets','Position',[20 180 100 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaDoMonteCarloSim(1);',...
                                   'TooltipString',sprintf('Perform Monte-Carlo analysis of syntesized singlet grid'),'FontSize',pars.fontSize);
fm.lcm.anaDoMcBrain    = uicontrol('Style','Pushbutton','String','MC Sim Brain','Position',[120 180 90 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaDoMonteCarloSim(0);',...
                                   'TooltipString',sprintf('Perform Monte-Carlo analysis of synthesized brain spectrum'),'FontSize',pars.fontSize);
fm.lcm.anaDoMcInVivo   = uicontrol('Style','Pushbutton','String','MC In Vivo','Position',[210 180 90 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaDoMonteCarloInVivo;',...
                                   'TooltipString',sprintf('Perform Monte-Carlo analysis of experimental spectrum'),'FontSize',pars.fontSize);
fm.lcm.anaMCarloN      = uicontrol('Style','Edit','Position', [20 155 40 20],'String',sprintf('%.0f',lcm.mc.n),...
                                   'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_MCarloNUpdate',...
                                   'TooltipString',sprintf('Number of Monte-Carlo computations'),'FontSize',pars.fontSize);
fm.lcm.anaMCarloRef    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Ref', ...
                                   'Value',flag.lcmMCarloRef,'Position',[.118 .22 .2 .03],'Callback','SP2_LCM_MCarloRefUpdate',...
                                   'TooltipString',sprintf('1: Perform reference LCM analysis\n0: Use the current LCM result as reference\n(experimental / in vivo data only)'),'FontSize',pars.fontSize);
fm.lcm.anaMCarloInit   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Init', ...
                                   'Value',flag.lcmMCarloInit,'Position',[.198 .22 .2 .03],'Callback','SP2_LCM_MCarloInitUpdate',...
                                   'TooltipString',sprintf('1: Init LCM fit with result from previous analysis\n0: Reset all parameters for every LCM analysis'),'FontSize',pars.fontSize);
fm.lcm.anaMCarloSpread = uicontrol('Style','Edit','Position', [160 155 30 20],'String',sprintf('%.0f',lcm.mc.initSpread),...
                                   'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_MCarloSpreadUpdate',...
                                   'TooltipString',sprintf('Standard deviation [%%] of variation for Monte-Carlo initialization'),'FontSize',pars.fontSize);
fm.lcm.anaMCarloCont   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Cont', ...
                                   'Value',flag.lcmMCarloCont,'Position',[.338 .22 .2 .03],'Callback','SP2_LCM_MCarloContUpdate',...
                                   'TooltipString',sprintf('Continue existing Monte-Carlo analysis and extend by assigned number of computations'),'FontSize',pars.fontSize);
fm.lcm.anaDoMcInVivoB  = uicontrol('Style','Pushbutton','String','B','Position',[260 155 20 20],...
                                   'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaDoMonteCarloInVivoBatch;',...
                                   'TooltipString',sprintf('Batch analysis of Monte-Carlo simulations for set of in vivo SPX protocols'),'FontSize',pars.fontSize);
fm.lcm.anaDoMcBatchN   = uicontrol('Style','Edit','Position', [280 155 40 20],'String',sprintf('%.0f',lcm.batch.n),...
                                   'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_MCarloBatchNUpdate',...
                                   'TooltipString',sprintf('Number of Monte-Carlo computations for batch processing of in vivo spectra:\n>0: This number overrides the protocol values and is applied to all simulations\n=0: The original number of MC computations defined in the SPX protocols is used'),'FontSize',pars.fontSize);
                               
%--- save result to file ---
fm.lcm.anaSaveXls     = uicontrol('Style','Pushbutton','String','Save .xls','Position',[20 130 60 20],...
                                  'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaSaveXls;',...
                                  'TooltipString',sprintf('Save LCModel analysis to XLS file\n(in ''Export'' directory)'));
fm.lcm.anaSaveSummary = uicontrol('Style','Pushbutton','String','Summary','Position',[80 130 60 20],...
                                  'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaSaveSummaryFigure;',...
                                  'TooltipString',sprintf('Save LCModel summary figure to file'));
fm.lcm.anaSaveSuper   = uicontrol('Style','Pushbutton','String','Super','Position',[140 130 50 20],...
                                  'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaSaveSuperposFigure;',...
                                  'TooltipString',sprintf('Save LCModel total superposition figure to file'));
fm.lcm.anaSaveFigs    = uicontrol('Style','Pushbutton','String','SPX','Position',[190 130 45 20],...
                                  'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaSaveSpxFigures;',...
                                  'TooltipString',sprintf('Save screenshots of LCModel analysis (main, basis, fit) to image files'));
fm.lcm.anaSaveCorr    = uicontrol('Style','Pushbutton','String','Corr','Position',[235 130 45 20],...
                                  'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaSaveCorrFigures;',...
                                  'TooltipString',sprintf('Save parameter correlation matrices'));
fm.lcm.anaSaveAna     = uicontrol('Style','Pushbutton','String','Ana','Position',[280 130 40 20],...
                                  'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaSaveSpecs;',...
                                  'TooltipString',sprintf('Save numerical result(s) of LCModel analysis\nof a single spectrum or all spectra to file\n(based on ''Superimpose'' plotting flag selection)'));
% fm.lcm.anaSaveMCarlo = uicontrol('Style','Pushbutton','String','MC','Position',[250 130 50 20],...
%                                  'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaSaveMCarlo;',...
%                                  'TooltipString',sprintf('Save numerical result(s) of LCModel analysis\nof a single spectrum or all spectra to file\n(based on ''Superimpose'' plotting flag selection)'));
                        
%--- batch processing (tmp) ---
% fm.lcm.doBatchProcAndSave = uicontrol('Style','Pushbutton','String','Proc & Save','Position',[20 110 80 18],'Callback','SP2_LCM_DoProcAndSave;',...
%                                       'TooltipString',sprintf('Temporary processing option'));
% fm.lcm.doBatchSave        = uicontrol('Style','Pushbutton','String','Save','Position',[100 110 50 18],'Callback','SP2_LCM_DoSave;',...
%                                       'TooltipString',sprintf('Temporary processing option'));
                        
%--- LCModel analysis ---
fm.lcm.anaPpmStrLab  = text('Position',[0.58, 0.32],'String','Frequency Window(s)','FontSize',pars.fontSize);
fm.lcm.anaPpmStr     = uicontrol('Style','Edit','Position', [340 230 230 18],'String',lcm.anaPpmStr,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_AnaPpmStrUpdate',...
                                 'TooltipString',sprintf('Frequency range(s) in ppm for LCModel analysis\n(e.g. 1.2:1.8 7:8.3)'),'FontSize',pars.fontSize);            
fm.lcm.anaLbFlag     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','LB',...
                                 'FontSize',pars.fontSize,'Units','Normalized',...
                                 'Position',[.570 .288 .13 .03],'Callback','SP2_LCM_AnaLbFlagUpdate',...
                                 'TooltipString',sprintf('Include exponential line broadening [Hz]\nin LCModel analysis'));
fm.lcm.anaGbFlag     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','GB',...
                                 'FontSize',pars.fontSize,'Units','Normalized',...
                                 'Position',[.670 .288 .13 .03],'Callback','SP2_LCM_AnaGbFlagUpdate',...
                                 'TooltipString',sprintf('Include Gaussian line broadening [Hz^2]\nin LCModel analysis'));
fm.lcm.anaPhc0Flag   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','PHC0',...
                                 'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaPhc0,...
                                 'Position',[.770 .288 .13 .03],'Callback','SP2_LCM_AnaPhc0FlagUpdate',...
                                 'TooltipString',sprintf('Include zero order phase correction [deg]\nin LCModel analysis'));
fm.lcm.anaPhc1Flag   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','PHC1',...
                                 'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaPhc1,...
                                 'Position',[.870 .288 .13 .03],'Callback','SP2_LCM_AnaPhc1FlagUpdate',...
                                 'TooltipString',sprintf('Include first order phase correction [deg]\nin LCModel analysis'));
fm.lcm.anaShiftFlag  = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Shift',...
                                 'FontSize',pars.fontSize,'Units','Normalized',...
                                 'Position',[.570 .253 .13 .03],'Callback','SP2_LCM_AnaShiftFlagUpdate',...
                                 'TooltipString',sprintf('Include frequency variation [Hz]\nin LCModel analysis'));
                          
%--- baseline handling ---
fm.lcm.anaPolyFlag   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Polynomial',...
                                 'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaPoly,...
                                 'Position',[.670 .253 .18 .03],'Callback','SP2_LCM_AnaPolyFlagUpdate',...
                                 'TooltipString',sprintf('Include polynomial function\nin spectrum quantification'));
fm.lcm.anaPolyOrdDec = uicontrol('Style','Pushbutton','String','-','Position',[480 180 20 18],'FontWeight','bold',...
                                 'Callback','SP2_LCM_AnaPolyOrderDec','FontSize',pars.fontSize);
fm.lcm.anaPolyOrder  = uicontrol('Style','Edit','Position', [500 180 30 18],'String',sprintf('%.0f',lcm.anaPolyOrder),...
                                 'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_AnaPolyOrderUpdate;',...
                                 'TooltipString',sprintf('Order of polynomial included\nin spectrum quantification'),'FontSize',pars.fontSize);
fm.lcm.anaPolyOrdInc = uicontrol('Style','Pushbutton','String','+','Position',[530 180 20 18],'FontWeight','bold',...
                                 'Callback','SP2_LCM_AnaPolyOrderInc','FontSize',pars.fontSize);
fm.lcm.anaSplineFlag = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Spline',...
                                 'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaSpline,...
                                 'Position',[.57 .218 .10 .03],'Callback','SP2_LCM_AnaSplineFlagUpdate',...
                                 'TooltipString',sprintf('Include cubic spline function\nin spectrum quantification'),'Enable','off');
fm.lcm.anaSplPtsPerPpm = uicontrol('Style','Edit','Position', [398 155 25 18],'String',sprintf('%.0f',lcm.anaSplPtsPerPpm),...
                                 'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_AnaSplPtsPerPpmUpdate;',...
                                 'TooltipString',sprintf('Number of spline grid points per ppm'),'FontSize',pars.fontSize);
fm.lcm.anaSplSmoothLab = text('Position',[0.775, 0.148],'String','Smooth','FontSize',pars.fontSize,'Color',pars.bgTextColor);
fm.lcm.anaSplSmooth    = uicontrol('Style','Edit','Position', [482 155 25 18],'String',sprintf('%.0f',lcm.anaSplSmooth),...
                                 'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_AnaSplSmoothUpdate;',...
                                 'TooltipString',sprintf('xxx'),'FontSize',pars.fontSize,'Enable','off');
fm.lcm.anaSplBoundsLab = text('Position',[0.953, 0.148],'String','Bounds','FontSize',pars.fontSize,'Color',pars.bgTextColor);
fm.lcm.anaSplBounds    = uicontrol('Style','Edit','Position', [565 155 25 18],'String',sprintf('%.1f',lcm.anaSplBounds),...
                                 'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_AnaSplBoundsUpdate;',...
                                 'TooltipString',sprintf('xxx'),'FontSize',pars.fontSize,'Enable','off');


%--- fit parameter handling ---
fm.lcm.anaResetPars  = uicontrol('Style','Pushbutton','String','Reset Starting Values','Position',[340 130 150 20],...
                                 'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_AnaStartValReset;',...
                                 'TooltipString',sprintf('Reset starting values of selected LCM optimization parameters'));
fm.lcm.anaScaleFlag  = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Scaling',...
                                 'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmAnaScale,...
                                 'Position',[.84 .182 .13 .03],'Callback','SP2_LCM_AnaScaleFlagUpdate',...
                                 'TooltipString',sprintf('Include scaling in reset of starting values'));
          
%--- plot LCM results ---                             
fm.lcm.showSummary  = uicontrol('Style','Pushbutton','String','Summary','Position',[25 90 80 20],...
                                'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_PlotResultSpecSummary(1);',...
                                'TooltipString',sprintf('Show summary of LCM analysis'));
fm.lcm.showSuperpos = uicontrol('Style','Pushbutton','String','Superpos','Position',[110 90 80 20],...
                                'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_PlotResultSpecSuperpos(1);',...
                                'TooltipString',sprintf('Show superposition of LCM traces'));
fm.lcm.showSum      = uicontrol('Style','Pushbutton','String','Sum','Position',[195 90 80 20],...
                                'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_PlotResultSpecSum(1);',...
                                'TooltipString',sprintf('Shows sum of LCM metabolite results'));
fm.lcm.plotBaseCorr = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','BaseCorr',...
                                'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmPlotBaseCorr,...
                                'Position',[.465 .125 .13 .03],'Callback','SP2_LCM_ResultPlotBaseCorrUpdate',...
                                'TooltipString',sprintf('1: Add baseline to LCM results\n0: Show baseline separately (i.e. do not include in metabs)'));
fm.lcm.showSel      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized', ...
                                'Value',flag.lcmShowSelAll,'Position',[.04 .09 .03 .03],'Callback','SP2_LCM_ShowSelUpdate',...
                                'TooltipString',sprintf('1: Superimpose / sum assigned metabolite selection only\n0: Superimpose / sum all available metabolites'),'FontSize',pars.fontSize);
fm.lcm.showSelStr   = uicontrol('Style','Edit','Position', [45 65 230 18],'String',lcm.showSelStr,'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_ShowSelStrUpdate',...
                                'TooltipString',sprintf('Metabolite selection for superposition/summation display\n(e.g. 1:3 7 9)'),'FontSize',pars.fontSize);            
fm.lcm.showSingle   = uicontrol('Style','Pushbutton','String','Single','Position',[25 40 80 20],...
                                'FontName','Helvetica','FontSize',pars.fontSize,'Callback','SP2_LCM_PlotResultSpecSingle(1);',...
                                'TooltipString',sprintf('Shows single metabolite of LCM result'));
fm.lcm.singleDecr   = uicontrol('Style','Pushbutton','String','-','Position',[110 40 22 20],...
                                'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_ResultSpecSingleCurrDecr',...
                                'TooltipString',sprintf('Lower number of metabolite to be displayed'));
fm.lcm.singleCurr   = uicontrol('Style','Edit','Position', [132 40 36 20],'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_ResultSpecSingleCurrUpdate','FontSize',pars.fontSize);
fm.lcm.singleIncr   = uicontrol('Style','Pushbutton','String','+','Position',[168 40 22 20],...
                                'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_ResultSpecSingleCurrIncr',...
                                'TooltipString',sprintf('Raise number of metabolite to be displayed'));
fm.lcm.showResid    = uicontrol('Style','Pushbutton','String','Residual','Position',[195 40 80 20],...
                                'FontSize',pars.fontSize,'FontName','Helvetica','Callback','SP2_LCM_PlotResultSpecResidual(1);',...
                                'TooltipString',sprintf('Show difference (target FID minus LCM fit)'));

%--- inclusion/exclusion of target spectrum and baseline                        
fm.lcm.plotInclTarget = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Target',...
                                  'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmPlotInclTarget,...
                                  'Position',[.050 .015 .13 .03],'Callback','SP2_LCM_ResultPlotIncludeTargetUpdate',...
                                  'TooltipString',sprintf('Include target spectrum in the display of LCM results'),'FontSize',pars.fontSize);
fm.lcm.plotInclBase   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Baseline',...
                                  'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmPlotInclBase,...
                                  'Position',[.16 .015 .13 .03],'Callback','SP2_LCM_ResultPlotIncludeBaseUpdate',...
                                  'TooltipString',sprintf('1: Show baseline in LCM plots, 0: Baseline is not displayed'),'FontSize',pars.fontSize,'Enable','off');
                                  % 'TooltipString',sprintf('1: Show baseline in LCM plots, 0: Baseline is not displayed'),'FontSize',pars.fontSize,'Enable','off');
fm.lcm.plotInclFit    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Fit',...
                                  'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmPlotInclFit,...
                                  'Position',[.283 .015 .10 .03],'Callback','SP2_LCM_ResultPlotIncludeFitUpdate',...
                                  'TooltipString',sprintf('1: Show total fit sum in superposition plot\n0: Do not show total fit sum in superposition plot'),'FontSize',pars.fontSize);
fm.lcm.plotInclResid  = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'String','Residual',...
                                  'FontSize',pars.fontSize,'Units','Normalized','Value',flag.lcmPlotInclResid,...
                                  'Position',[.355 .015 .13 .03],'Callback','SP2_LCM_ResultPlotIncludeResidUpdate',...
                                  'TooltipString',sprintf('1: Show fit residual in superposition plot\n0: Do not show fit residual in superposition plot'),'FontSize',pars.fontSize);

%--- spectral display ---
fm.lcm.plotLineWidth  = uicontrol('Style','Edit','Position', [320 42 36 20],'String',sprintf('%.0f',lcm.lineWidth),...
                                  'BackGroundColor',pars.bgColor,'Callback','SP2_LCM_PlotLineWidthUpdate',...
                                  'TooltipString',sprintf('Plotting line width for spetrum visualization'),'FontSize',pars.fontSize);
                              
%--- color mode ---         
fm.lcm.saveLog     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Log', ...
                               'Position',[.63 .10 .08 .03],'Callback','SP2_LCM_AnaSaveLogFlagUpdate',...
                               'TooltipString',sprintf('Save processing trace information in log text file'),'FontSize',pars.fontSize);
     
fm.lcm.saveJpeg    = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Jpeg', ...
                               'Position',[.72 .10 .08 .03],'Callback','SP2_LCM_AnaSaveJpegFlagUpdate',...
                               'TooltipString',sprintf('Save figures also as image (jpeg) files'),'FontSize',pars.fontSize);
                       
%--- clear all LCM figures ---                              
fm.lcm.closeLcmFigs   = uicontrol('Style','Pushbutton','String','X Figs','Position',[490 72 56 18],'Callback','SP2_LCM_CloseLcmFigures;',...
                                  'TooltipString',sprintf('Close all LCM spectral figures'),'FontSize',pars.fontSize);
                                                         
%--- color mode ---         
fm.lcm.cmapUni     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Blue', ...
                               'Value',flag.lcmColorMap==0,'Position',[.63 .06 .2 .03],'Callback','SP2_LCM_ColormapUniUpdate','FontSize',pars.fontSize);
fm.lcm.cmapJet     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Jet', ...
                               'Value',flag.lcmColorMap==1,'Position',[.72 .06 .2 .03],'Callback','SP2_LCM_ColormapJetUpdate','FontSize',pars.fontSize);
fm.lcm.cmapHsv     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Hsv', ...
                               'Value',flag.lcmColorMap==2,'Position',[.805 .06 .2 .03],'Callback','SP2_LCM_ColormapHsvUpdate','FontSize',pars.fontSize);
fm.lcm.cmapHot     = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Hot', ...
                               'Value',flag.lcmColorMap==3,'Position',[.89 .06 .2 .03],'Callback','SP2_LCM_ColormapHotUpdate','FontSize',pars.fontSize);
                            
%--- freeze/keep figure ---
fm.lcm.legend       = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Legend', ...
                                'Value',flag.lcmLegend,'Position',[.51 .02 .2 .03],'Callback','SP2_LCM_LegendUpdate',...
                                'TooltipString',sprintf('Show overview data legend in superposition and serial window'),'FontSize',pars.fontSize);
fm.lcm.updateCalc   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Update', ...
                                'Value',flag.lcmUpdateCalc,'Position',[.63 .02 .12 .03],'Callback','SP2_LCM_UpdateCalcUpdate',...
                                'TooltipString',sprintf('Automated processing if needed and update every time a parameter is changed'),'FontSize',pars.fontSize);
fm.lcm.keepFigure   = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','String','Keep', ...
                                'Value',flag.lcmKeepFig,'Position',[.75 .02 .10 .03],'Callback','SP2_LCM_KeepFigureUpdate',...
                                'TooltipString',sprintf('1: figures are kept, ie. parameter changes are plotted to new figures\n0: Parameter changes are updated in the same figure'),'FontSize',pars.fontSize);
fm.lcm.verbose      = uicontrol('Style','RadioButton','BackGroundColor',pars.bgColor,'Units','Normalized','Value',flag.verbose,...
                                'String','Verbose','Position',[0.85 0.02 .17 .03],'Callback','SP2_LCM_VerboseFlagUpdate','FontSize',pars.fontSize);
                            
                             
%--- window update ---
SP2_LCM_LCModelWinUpdate

end
